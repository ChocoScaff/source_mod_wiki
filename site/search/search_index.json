{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Table des mati\u00e8res R\u00e9pertoire et creation d un projet Texture Model Les Outils d'hammer Optimisation Les entit\u00e9s Programmation Ressources Skybox Son et Musique Video Sprinkle Particules Dialogue Trigger et algorithme dans hammer Level design Lexique Liens Probl\u00e8mes","title":"Accueil"},{"location":"#table-des-matieres","text":"R\u00e9pertoire et creation d un projet Texture Model Les Outils d'hammer Optimisation Les entit\u00e9s Programmation Ressources Skybox Son et Musique Video Sprinkle Particules Dialogue Trigger et algorithme dans hammer Level design Lexique Liens Probl\u00e8mes","title":"Table des mati\u00e8res"},{"location":"dialogue/","text":"Syst\u00e8me de dialogue Ce chapitre a pour but de vous cr\u00e9er des dialogues avec vos npc. Nous allons utiliser le logiciel hlfaceposer . exe dans le dossier bin du moteur source. Expression Le syst\u00e8me Flex Sliders pemet de tester les expressions de votre personnage Pour sauvegarder les expressions, il faut cr\u00e9er un fichier .txt dans le dossier expressions (cf. Exemple expressions.txt ) Ce fichier contient les variables des flex sliders . Vous pouvez voire tous les expressions lister dans le fichier avec la fen\u00eatre expression. Choreography Cr\u00e9e un nouveau fichier .vcd dans le dossier scene avec Choreography->new... Nommer votre acteur Cliquer sur le nom de votre acteur et cr\u00e9e un nouveau channel associer \u00e0 un acteur. Les channel sont comme une timeline dans les logiciels de montage. Vous pouvez mettre votre fichier audio, les expressions et les gestures de la sc\u00e8ne. Dialogue dans Hammer Placer un logic_choreographed_scene dans hammer et s\u00e9lectionner votre fichier .vcd","title":"Syst\u00e8me de dialogue"},{"location":"dialogue/#systeme-de-dialogue","text":"Ce chapitre a pour but de vous cr\u00e9er des dialogues avec vos npc. Nous allons utiliser le logiciel hlfaceposer . exe dans le dossier bin du moteur source.","title":"Syst\u00e8me de dialogue"},{"location":"dialogue/#expression","text":"Le syst\u00e8me Flex Sliders pemet de tester les expressions de votre personnage Pour sauvegarder les expressions, il faut cr\u00e9er un fichier .txt dans le dossier expressions (cf. Exemple expressions.txt ) Ce fichier contient les variables des flex sliders . Vous pouvez voire tous les expressions lister dans le fichier avec la fen\u00eatre expression.","title":"Expression"},{"location":"dialogue/#choreography","text":"Cr\u00e9e un nouveau fichier .vcd dans le dossier scene avec Choreography->new... Nommer votre acteur Cliquer sur le nom de votre acteur et cr\u00e9e un nouveau channel associer \u00e0 un acteur. Les channel sont comme une timeline dans les logiciels de montage. Vous pouvez mettre votre fichier audio, les expressions et les gestures de la sc\u00e8ne.","title":"Choreography"},{"location":"dialogue/#dialogue-dans-hammer","text":"Placer un logic_choreographed_scene dans hammer et s\u00e9lectionner votre fichier .vcd","title":"Dialogue dans Hammer"},{"location":"entity/","text":"Entity Tool Dans les entity tools, il existe plusieurs Class , nous allons d\u00e9crire une parties d'entres elles info_player_start D\u00e9finie o\u00f9 le joueur va appara\u00eetre Light Permettent de d\u00e9finir les lumi\u00e8res Prop Quand un prop est appliqu\u00e9, on a un carr\u00e9 rouge qui s'affiche est une nouvelle fen\u00eatre, sur cette nouvelle fen\u00eatre, on a \u00abWorld Model\u00bb qui permet de faire prendre une apparence au prop \u00e0 partir de la biblioth\u00e8que des mod\u00e8les 3D du jeu. Nous avons plusieurs Props Prop_Rotating_Door Ce prop permet de cr\u00e9er une porte, qui s'ouvre quand le joueur interagi avec. Prop_physics Cr\u00e9e des mod\u00e8les avec des propri\u00e9t\u00e9s physiques ce mod\u00e8le peut aussi \u00eatre bris\u00e9. Prop_detail N'a pas de collision ni de propri\u00e9t\u00e9 physique \u00c0 utiliser pour les d\u00e9cors d'arri\u00e8re-plan. Prop_static c'est un prop qui ne bouge pas, ils n'ont pas propi\u00e9t\u00e9 physique sauf la collision. ne peut pas avoir d'animation. Ajouter une entit\u00e9 dans le r\u00e9pertoire de hammer Pour ajouter une entit\u00e9, nous allons cr\u00e9er un fichier .fdg avec sa nous pouvons ajouter notre entit\u00e9 \u00e9crit en C++ cf. 8.4 Ajouter une entit\u00e9 Ici pour ajouter une arme. @PointClass base(Targetname, Angles, Origin) studio(\"path/model.mdl\") = example_entity_name : \"example entity description, visible in Hammers 'help' Box. [ Property_name_1(string) : \"Example String Name\" : \"Example\" : \"Keyvalue Description\" Property_name_2(integer) : \"Example Interger Name\" : 15 : \"Keyvalue Description\" Property_name_3(float) : \"Example Float Name\" : \"1.5\" : \"Keyvalue Description\" Property_name_4(boolean) : \"Example Boolean Name\" : 1 : \"Keyvalue Description\" Property_name_5(choices) : \"second number\" : 0 : \"Your choice of numbers!\" = [ 0 : \"Default\" 1 : \"Something\" 2 : \"Another Thing\" ] spawnflags(flags) = [ 1 : \"A flag\" : 0 // 0 means the flag isn't ticked by default 2 : \"Another flag\" : 1 // 1 means the flag is ticked by default ] // Inputs input DoSomething(void) : \"Do something\" // Outputs output OnSomethingHappened(void) : \"Fires when something happens\" output OnSomethingElse(void) : \"Fires when something else happens\" ] Ici pour ajouter un prop. Ajouter le fichier .fdg dans les Data files de Hammer.","title":"Entity Tool"},{"location":"entity/#entity-tool","text":"Dans les entity tools, il existe plusieurs Class , nous allons d\u00e9crire une parties d'entres elles info_player_start D\u00e9finie o\u00f9 le joueur va appara\u00eetre Light Permettent de d\u00e9finir les lumi\u00e8res","title":"Entity Tool"},{"location":"entity/#prop","text":"Quand un prop est appliqu\u00e9, on a un carr\u00e9 rouge qui s'affiche est une nouvelle fen\u00eatre, sur cette nouvelle fen\u00eatre, on a \u00abWorld Model\u00bb qui permet de faire prendre une apparence au prop \u00e0 partir de la biblioth\u00e8que des mod\u00e8les 3D du jeu. Nous avons plusieurs Props Prop_Rotating_Door Ce prop permet de cr\u00e9er une porte, qui s'ouvre quand le joueur interagi avec. Prop_physics Cr\u00e9e des mod\u00e8les avec des propri\u00e9t\u00e9s physiques ce mod\u00e8le peut aussi \u00eatre bris\u00e9. Prop_detail N'a pas de collision ni de propri\u00e9t\u00e9 physique \u00c0 utiliser pour les d\u00e9cors d'arri\u00e8re-plan. Prop_static c'est un prop qui ne bouge pas, ils n'ont pas propi\u00e9t\u00e9 physique sauf la collision. ne peut pas avoir d'animation.","title":"Prop"},{"location":"entity/#ajouter-une-entite-dans-le-repertoire-de-hammer","text":"Pour ajouter une entit\u00e9, nous allons cr\u00e9er un fichier .fdg avec sa nous pouvons ajouter notre entit\u00e9 \u00e9crit en C++ cf. 8.4 Ajouter une entit\u00e9 Ici pour ajouter une arme. @PointClass base(Targetname, Angles, Origin) studio(\"path/model.mdl\") = example_entity_name : \"example entity description, visible in Hammers 'help' Box. [ Property_name_1(string) : \"Example String Name\" : \"Example\" : \"Keyvalue Description\" Property_name_2(integer) : \"Example Interger Name\" : 15 : \"Keyvalue Description\" Property_name_3(float) : \"Example Float Name\" : \"1.5\" : \"Keyvalue Description\" Property_name_4(boolean) : \"Example Boolean Name\" : 1 : \"Keyvalue Description\" Property_name_5(choices) : \"second number\" : 0 : \"Your choice of numbers!\" = [ 0 : \"Default\" 1 : \"Something\" 2 : \"Another Thing\" ] spawnflags(flags) = [ 1 : \"A flag\" : 0 // 0 means the flag isn't ticked by default 2 : \"Another flag\" : 1 // 1 means the flag is ticked by default ] // Inputs input DoSomething(void) : \"Do something\" // Outputs output OnSomethingHappened(void) : \"Fires when something happens\" output OnSomethingElse(void) : \"Fires when something else happens\" ] Ici pour ajouter un prop. Ajouter le fichier .fdg dans les Data files de Hammer.","title":"Ajouter une entit\u00e9 dans le r\u00e9pertoire de hammer"},{"location":"hammer/","text":"Les Outils d'hammer Hammer est un \u00e9diteur de map permettant de transformer une map que l'on a dessin\u00e9e vers un format pouvant \u00eatre lu par le moteur du jeu. Plusieurs conversions sont faite d'abord, on met le fichier .vmf qui est un fichier texte vers le format .bps , puis on d\u00e9coupe l'espace avec vis, pour l'optimisation et on finit par calculer la lumi\u00e8re avec rad. Outils Comme beaucoup d'autres logiciels Hammer comporte des outils. Selection Tools Racourcis Shift + S Il permet tout simplement de s\u00e9lectionner un objet. Magnify RacourcisShift + G Permet de zoomer. Cam\u00e9ra Racourcis Shift + C Entity tools Racourcis Shift + E Permet de cr\u00e9er des entit\u00e9s objet, lumi\u00e8res, personnages. etc... Block Tools Racourics Shift + B Permet la cr\u00e9ation d'un block. Toogle Texture Permet l'application d'une texture Apply current Texture Permet d'appliquer la texture sur le block s\u00e9lectionn\u00e9. Racourcis utiles [ ou alt + a ajoutes des lignes sur la grille. ] ou alt + s enl\u00e8ve des lignes sur la grille. 1 \u00e0 0 zoom plan en 2D. niveau de zoom 1 faible. 0 \u00e9lev\u00e9. shift + Z n'affiche qu'une seule fen\u00eatre. shift + W magn\u00e9tique. Fen\u00eatre Hammer de divise en 4 fen\u00eatres \"View\" en anglais De gauche \u00e0 droite et de haut en bas. La premi\u00e8re \" View \" cam\u00e9ra est une \"3D Textured Polygons\", la deuxi\u00e8me view est une \"2D top (x/y)\", la troisi\u00e8me view est une \"2D front (y/z)\" la quatri\u00e8me view est une \"2D side (x/z)\". Nous pouvons changer les view en cliquant sur une view puis sur le panneau du haut pour changer de view . Faire une Rotation Il existe plusieurs moyens de faire une rotation Nous pouvons le faire de mani\u00e8re manuel. Pour cela, il faut cliquer une fois sur un objet depuis une fen\u00eatre \" 2D View \" vous devez voir des ronds et non des carr\u00e9s sur l'objet, la rotation depuis une croix celte placer au mileu de l'objet nous pouvons la d\u00e9placer pour changer l'angle de rotation. Sinon depuis une \"2D View' faire un clique droit cliquer sur \"Transform\" rac ctrl+m, nous avons le choix entre changer la rotation (Rotate), l'\u00e9chelle (Scale) et aussi la position (move). Cr\u00e9e un Cylindre et une Arche Avec l'outils Block trac\u00e9 changer Objects en bas \u00e0 droite, vous aurez le choix entre. \"Cylinder\" pour faire un cylindre \" Arch \" pour cr\u00e9er une arche \" sphere \" pour cr\u00e9er une sph\u00e8re \" Torus \" pour cr\u00e9er une forme de donut \" Wedge \" pour cr\u00e9er un triangle \" Spike \" pour cr\u00e9er une forme pointu Configurer Hammer - Configuration fait Edit et ajouter un nom \u00e0 votre configuration - Game Data Files ajouter les fichiers .fgd de votre mod -Texture Format laisser en Half-Life 2 -Map Type laisser en Half-Life 2 -Default PointEntity class Vous pouvez mettre l'entity par d\u00e9faut quand vous ajoutez une. -Default SolidEntity class Mettre le SolidEntity par d\u00e9fault -Cordon texture Metter tools/toolsskybox - Game Executable Directory Mettre le .exe de votre mod (hl2.exe) - Hammer VMF Directory Mettre le dossier mapsrc de votre mod - Game Executable Mettre le .exe de votre mod -BSP Executable Mettre bin/vbsp.exe -VIS Executable Mettre bin/vvis.exe -RAD Executable Mettre bin/vrad.exe -Place Compiled maps in this directory before running the game Mettre le dossier maps de votre mod Utiliser les textures Blends Cr\u00e9e un displacement de votre face s\u00e9lectionner dans Hammer avec l'outil toggle texture aplication . Il suffit maintenant d'utiliser l'option Paint Alpha , pour peindre notre texture cf. Texture Blend","title":"Les Outils d'hammer"},{"location":"hammer/#les-outils-dhammer","text":"Hammer est un \u00e9diteur de map permettant de transformer une map que l'on a dessin\u00e9e vers un format pouvant \u00eatre lu par le moteur du jeu. Plusieurs conversions sont faite d'abord, on met le fichier .vmf qui est un fichier texte vers le format .bps , puis on d\u00e9coupe l'espace avec vis, pour l'optimisation et on finit par calculer la lumi\u00e8re avec rad.","title":"Les Outils d'hammer"},{"location":"hammer/#outils","text":"Comme beaucoup d'autres logiciels Hammer comporte des outils. Selection Tools Racourcis Shift + S Il permet tout simplement de s\u00e9lectionner un objet. Magnify RacourcisShift + G Permet de zoomer. Cam\u00e9ra Racourcis Shift + C Entity tools Racourcis Shift + E Permet de cr\u00e9er des entit\u00e9s objet, lumi\u00e8res, personnages. etc... Block Tools Racourics Shift + B Permet la cr\u00e9ation d'un block. Toogle Texture Permet l'application d'une texture Apply current Texture Permet d'appliquer la texture sur le block s\u00e9lectionn\u00e9. Racourcis utiles [ ou alt + a ajoutes des lignes sur la grille. ] ou alt + s enl\u00e8ve des lignes sur la grille. 1 \u00e0 0 zoom plan en 2D. niveau de zoom 1 faible. 0 \u00e9lev\u00e9. shift + Z n'affiche qu'une seule fen\u00eatre. shift + W magn\u00e9tique.","title":"Outils"},{"location":"hammer/#fenetre","text":"Hammer de divise en 4 fen\u00eatres \"View\" en anglais De gauche \u00e0 droite et de haut en bas. La premi\u00e8re \" View \" cam\u00e9ra est une \"3D Textured Polygons\", la deuxi\u00e8me view est une \"2D top (x/y)\", la troisi\u00e8me view est une \"2D front (y/z)\" la quatri\u00e8me view est une \"2D side (x/z)\". Nous pouvons changer les view en cliquant sur une view puis sur le panneau du haut pour changer de view .","title":"Fen\u00eatre"},{"location":"hammer/#faire-une-rotation","text":"Il existe plusieurs moyens de faire une rotation Nous pouvons le faire de mani\u00e8re manuel. Pour cela, il faut cliquer une fois sur un objet depuis une fen\u00eatre \" 2D View \" vous devez voir des ronds et non des carr\u00e9s sur l'objet, la rotation depuis une croix celte placer au mileu de l'objet nous pouvons la d\u00e9placer pour changer l'angle de rotation. Sinon depuis une \"2D View' faire un clique droit cliquer sur \"Transform\" rac ctrl+m, nous avons le choix entre changer la rotation (Rotate), l'\u00e9chelle (Scale) et aussi la position (move).","title":"Faire une Rotation"},{"location":"hammer/#cree-un-cylindre-et-une-arche","text":"Avec l'outils Block trac\u00e9 changer Objects en bas \u00e0 droite, vous aurez le choix entre. \"Cylinder\" pour faire un cylindre \" Arch \" pour cr\u00e9er une arche \" sphere \" pour cr\u00e9er une sph\u00e8re \" Torus \" pour cr\u00e9er une forme de donut \" Wedge \" pour cr\u00e9er un triangle \" Spike \" pour cr\u00e9er une forme pointu","title":"Cr\u00e9e un Cylindre et une Arche"},{"location":"hammer/#configurer-hammer","text":"- Configuration fait Edit et ajouter un nom \u00e0 votre configuration - Game Data Files ajouter les fichiers .fgd de votre mod -Texture Format laisser en Half-Life 2 -Map Type laisser en Half-Life 2 -Default PointEntity class Vous pouvez mettre l'entity par d\u00e9faut quand vous ajoutez une. -Default SolidEntity class Mettre le SolidEntity par d\u00e9fault -Cordon texture Metter tools/toolsskybox - Game Executable Directory Mettre le .exe de votre mod (hl2.exe) - Hammer VMF Directory Mettre le dossier mapsrc de votre mod - Game Executable Mettre le .exe de votre mod -BSP Executable Mettre bin/vbsp.exe -VIS Executable Mettre bin/vvis.exe -RAD Executable Mettre bin/vrad.exe -Place Compiled maps in this directory before running the game Mettre le dossier maps de votre mod","title":"Configurer Hammer"},{"location":"hammer/#utiliser-les-textures-blends","text":"Cr\u00e9e un displacement de votre face s\u00e9lectionner dans Hammer avec l'outil toggle texture aplication . Il suffit maintenant d'utiliser l'option Paint Alpha , pour peindre notre texture cf. Texture Blend","title":"Utiliser les textures Blends"},{"location":"level_design/","text":"Level Design Carte Background Dans le menu principal, vous pouvez avoir une carte qui tourne dans votre menu ou une simple image. Dans le fichier scripts/chapterbackgrounds.txt , vous pouvez associer \u00e0 un bakground. \"chapters\" { 1 \"background01\" 2 \"background01\" 3 \"background02\" 4 \"background02\" 5 \"background03\" 6 \"background03\" 7 \"background04\" 8 \"background04\" 9 \"background05\" 9a \"background05\" 10 \"background06\" 11 \"background06\" 12 \"background07\" 13 \"background07\" 14 \"background07\" 15 \"background07\" } Notre image ou/et map doit avoir le m\u00eame nom. materials\\console\\background01.vmt maps\\background01.bsp Il est possible d'utiliser une image flou pendant le chargement pour faire un effet de transition. Pour ce faire la placer une cam\u00e9ra( point_viewcontrol ) qui va filmer la sc\u00e8ne en cr\u00e9ant un entity . Placer le point que va regarder la cam\u00e9ra (info_target) en cr\u00e9ant un entity de Class info_target . On peut activer la cam\u00e9ra avec un logic_auto . Grille Sur le panneau \u00ab View \u00bb vous pouvez modifier la grille sur \u00ab Set Grid Size \u00bb. Voil\u00e0 \u00e0 quoi correspond les tailles de la Grille. Grille M\u00e8tre Note 1 1,905 cm 2 ~4 cm 4 ~7,5 cm 8 ~15 cm 16 ~30 cm 28 ~55 cm Hauteur champ vision accroupie (joueur) 32 ~60 cm Collision largeur,longueur (joueur) 36 ~70 cm Collision hauteur accroupie (Joueur) 48 ~90 cm Largeur porte 52.49344 1 m 64 ~1,2m Hauteur champ vision debout (joueur) 72 ~1,4m Collision hauteur debout(joueur) 108 ~2m Hauteur porte 128 ~2,5m Hauteur couloir 160 ~3m 256 ~5m 512 ~9,75m Tool Textures Ces Textures sont des textures invisibles qui servent pour communiquer au moteur des \u00e9l\u00e9ments Block Bullets Permet de bloquer les balles des armes des joueurs et des PNJ (mais ne bloque pas jets des pnj comme les jets d'acide) Ladder Permet de cr\u00e9er une \u00e9chelle pour le jeu, elle est invisible pour le joueur Trigger Texture d'Optimisation Les block d'optimisation sont d\u00e9crits cf. 7.2 optimisation Conseils pour cr\u00e9er ses cartes Faire un Plan de sa carte. Faites un croquis de votre id\u00e9e puis au fur et \u00e0 mesure faites un dessin avec les dimensions souhait\u00e9es cela vous fera gagner beaucoup de temps sur le long terme, car vous ferez pleins d'erreurs si vous commencez sans faire de dessin. La carte doit \u00eatre amusante \u00e0 jouer. La carte doit s'adapter au gameplay du jeu si vous faites une carte de fps comp\u00e9titif comment faire pour que la carte soit \u00e9quilibr\u00e9e et offres des possibilit\u00e9s et des situations de jeux int\u00e9ressantes demandez-vous \"qu'est-ce qu'on peut faire, et qu'est-ce qu'on ne peut pas faire?\" Commencer simple. Utiliser une texture d\u00e9veloppeur durant la fabrication de votre ne vous emb\u00eater pas \u00e0 chercher des bonnes textures d\u00e8s le d\u00e9but ou \u00e0 mettre des decals, le but premier est qu'elle soit bien faites et quelle sert le gameplay. Faites les d\u00e9tails \u00e0 la fin pour embellir votre carte. Regardez comment font les professionnels. Dans les dossiers \" sourcesdk_content\\hl2\\mapsrc \" nous avons une liste de cartes regardez comment elles sont fa\u00eetes et comprendre pourquoi les d\u00e9veloppeurs ont fait sa. Debugger sa carte Prenez le fichier debugoption.txt cf. debugoptions.txt et metterle dans le dossier /youModName/scripts/ Entrer les param\u00e8tres suivant dans la console. sv_cheats 1 developer 1 Ouvrez avec Shift + F1","title":"Level Design"},{"location":"level_design/#level-design","text":"","title":"Level Design"},{"location":"level_design/#carte-background","text":"Dans le menu principal, vous pouvez avoir une carte qui tourne dans votre menu ou une simple image. Dans le fichier scripts/chapterbackgrounds.txt , vous pouvez associer \u00e0 un bakground. \"chapters\" { 1 \"background01\" 2 \"background01\" 3 \"background02\" 4 \"background02\" 5 \"background03\" 6 \"background03\" 7 \"background04\" 8 \"background04\" 9 \"background05\" 9a \"background05\" 10 \"background06\" 11 \"background06\" 12 \"background07\" 13 \"background07\" 14 \"background07\" 15 \"background07\" } Notre image ou/et map doit avoir le m\u00eame nom. materials\\console\\background01.vmt maps\\background01.bsp Il est possible d'utiliser une image flou pendant le chargement pour faire un effet de transition. Pour ce faire la placer une cam\u00e9ra( point_viewcontrol ) qui va filmer la sc\u00e8ne en cr\u00e9ant un entity . Placer le point que va regarder la cam\u00e9ra (info_target) en cr\u00e9ant un entity de Class info_target . On peut activer la cam\u00e9ra avec un logic_auto .","title":"Carte Background"},{"location":"level_design/#grille","text":"Sur le panneau \u00ab View \u00bb vous pouvez modifier la grille sur \u00ab Set Grid Size \u00bb. Voil\u00e0 \u00e0 quoi correspond les tailles de la Grille. Grille M\u00e8tre Note 1 1,905 cm 2 ~4 cm 4 ~7,5 cm 8 ~15 cm 16 ~30 cm 28 ~55 cm Hauteur champ vision accroupie (joueur) 32 ~60 cm Collision largeur,longueur (joueur) 36 ~70 cm Collision hauteur accroupie (Joueur) 48 ~90 cm Largeur porte 52.49344 1 m 64 ~1,2m Hauteur champ vision debout (joueur) 72 ~1,4m Collision hauteur debout(joueur) 108 ~2m Hauteur porte 128 ~2,5m Hauteur couloir 160 ~3m 256 ~5m 512 ~9,75m","title":"Grille"},{"location":"level_design/#tool-textures","text":"Ces Textures sont des textures invisibles qui servent pour communiquer au moteur des \u00e9l\u00e9ments Block Bullets Permet de bloquer les balles des armes des joueurs et des PNJ (mais ne bloque pas jets des pnj comme les jets d'acide) Ladder Permet de cr\u00e9er une \u00e9chelle pour le jeu, elle est invisible pour le joueur Trigger Texture d'Optimisation Les block d'optimisation sont d\u00e9crits cf. 7.2 optimisation","title":"Tool Textures"},{"location":"level_design/#conseils-pour-creer-ses-cartes","text":"Faire un Plan de sa carte. Faites un croquis de votre id\u00e9e puis au fur et \u00e0 mesure faites un dessin avec les dimensions souhait\u00e9es cela vous fera gagner beaucoup de temps sur le long terme, car vous ferez pleins d'erreurs si vous commencez sans faire de dessin. La carte doit \u00eatre amusante \u00e0 jouer. La carte doit s'adapter au gameplay du jeu si vous faites une carte de fps comp\u00e9titif comment faire pour que la carte soit \u00e9quilibr\u00e9e et offres des possibilit\u00e9s et des situations de jeux int\u00e9ressantes demandez-vous \"qu'est-ce qu'on peut faire, et qu'est-ce qu'on ne peut pas faire?\" Commencer simple. Utiliser une texture d\u00e9veloppeur durant la fabrication de votre ne vous emb\u00eater pas \u00e0 chercher des bonnes textures d\u00e8s le d\u00e9but ou \u00e0 mettre des decals, le but premier est qu'elle soit bien faites et quelle sert le gameplay. Faites les d\u00e9tails \u00e0 la fin pour embellir votre carte. Regardez comment font les professionnels. Dans les dossiers \" sourcesdk_content\\hl2\\mapsrc \" nous avons une liste de cartes regardez comment elles sont fa\u00eetes et comprendre pourquoi les d\u00e9veloppeurs ont fait sa.","title":"Conseils pour cr\u00e9er ses cartes"},{"location":"level_design/#debugger-sa-carte","text":"Prenez le fichier debugoption.txt cf. debugoptions.txt et metterle dans le dossier /youModName/scripts/ Entrer les param\u00e8tres suivant dans la console. sv_cheats 1 developer 1 Ouvrez avec Shift + F1","title":"Debugger sa carte"},{"location":"lexique/","text":"Lexique BSP : Binary Space Partitionning DLL : Dynamic Link Library FGD : Forge Game Data HL2 : Half-Life 2 PRT : PoRTal QC : QuakeC RES : RESsource list SMD : StudioModel Data VCD : Valve Choreography Data VGUI : Valve Graphical User Interface VMT : Valve MaTerial VPC : Valve Project Creator VPK : Valve PaK VRAD : Valve RADiosity VTF : Valve Texture Format VVIS : Valve Visible Information Set WAD : Where's All the Data","title":"Lexique"},{"location":"lexique/#lexique","text":"BSP : Binary Space Partitionning DLL : Dynamic Link Library FGD : Forge Game Data HL2 : Half-Life 2 PRT : PoRTal QC : QuakeC RES : RESsource list SMD : StudioModel Data VCD : Valve Choreography Data VGUI : Valve Graphical User Interface VMT : Valve MaTerial VPC : Valve Project Creator VPK : Valve PaK VRAD : Valve RADiosity VTF : Valve Texture Format VVIS : Valve Visible Information Set WAD : Where's All the Data","title":"Lexique"},{"location":"links/","text":"Ressources Texture Mod\u00e8le 3D https://developer.valvesoftware.com/wiki/Prop_Download_Sites https://itch.io/game-assets/tag-textures https://itch.io/game-assets/tag-3d Tutoriel https://developer.valvesoftware.com/wiki/SDK_Docs https://github.com/chipsnapper/SourceSDKMapFiles https://developer.valvesoftware.com/wiki/Leak https://gamebanana.com/search?_nPage=4&_sModelName=Tutorial&_sOrder=best_match&_sSearchString=source https://valvedev.info/guides/ https://www.youtube.com/watch?v=Vbs2RDUzUBM&list=PL8tDEPB6h7Lk0YtRtt4k1h_Thgj1ZA2dX https://www.youtube.com/watch?v=dhcoHQcrYKA&list=PLfwtcDG7LpxF7-uH_P9La76dgCMC_lfk3 Outils/logiciels https://ficool2.github.io/HammerPlusPlus-Website/ https://steamcommunity.com/groups/CrowbarTool https://github.com/NeilJed/VTFLib https://www.blender.org/ http://steamreview.org/BlenderSourceTools/ https://developer.valvesoftware.com/wiki/XBLAH%27s_Modding_Tool https://gamebanana.com/mods/345189 https://valvedev.info/guides/source-multi-tool-a-field-guide/ Livres or articles Source SDK Game Development Essentials Half-Life 2 Mods for dummies https://www.valvesoftware.com/en/publications https://www.researchgate.net/publication/254583261_Using_the_source_engine_for_serious_games http://will2k.byethost15.com/tutorials.htm?i=1","title":"Ressources"},{"location":"links/#ressources","text":"","title":"Ressources"},{"location":"links/#texture-modele-3d","text":"https://developer.valvesoftware.com/wiki/Prop_Download_Sites https://itch.io/game-assets/tag-textures https://itch.io/game-assets/tag-3d","title":"Texture Mod\u00e8le 3D"},{"location":"links/#tutoriel","text":"https://developer.valvesoftware.com/wiki/SDK_Docs https://github.com/chipsnapper/SourceSDKMapFiles https://developer.valvesoftware.com/wiki/Leak https://gamebanana.com/search?_nPage=4&_sModelName=Tutorial&_sOrder=best_match&_sSearchString=source https://valvedev.info/guides/ https://www.youtube.com/watch?v=Vbs2RDUzUBM&list=PL8tDEPB6h7Lk0YtRtt4k1h_Thgj1ZA2dX https://www.youtube.com/watch?v=dhcoHQcrYKA&list=PLfwtcDG7LpxF7-uH_P9La76dgCMC_lfk3","title":"Tutoriel"},{"location":"links/#outilslogiciels","text":"https://ficool2.github.io/HammerPlusPlus-Website/ https://steamcommunity.com/groups/CrowbarTool https://github.com/NeilJed/VTFLib https://www.blender.org/ http://steamreview.org/BlenderSourceTools/ https://developer.valvesoftware.com/wiki/XBLAH%27s_Modding_Tool https://gamebanana.com/mods/345189 https://valvedev.info/guides/source-multi-tool-a-field-guide/","title":"Outils/logiciels"},{"location":"links/#livres-or-articles","text":"Source SDK Game Development Essentials Half-Life 2 Mods for dummies https://www.valvesoftware.com/en/publications https://www.researchgate.net/publication/254583261_Using_the_source_engine_for_serious_games http://will2k.byethost15.com/tutorials.htm?i=1","title":"Livres or articles"},{"location":"model/","text":"Mod\u00e8le 3D https://www.blender.org/ http://steamreview.org/BlenderSourceTools/ Ce chapitre a pour but de mettre vos mod\u00e8les 3d cr\u00e9e dans votre mod source, importation se passe en 2 \u00e9tapes la premier, vous devez export depuis vers un format .smd ou .dmx avant d'exporter vers un fichier .mdl utilisable dans Source. Cr\u00e9e un mod\u00e8le 3D Nous allons cr\u00e9er un mod\u00e8le 3D sur Blender logiciel gratuit et libre, pour t\u00e9l\u00e9charger Blender cliquer ici . Nous allons ajouter un addon pour cela cliquer ici . Lancez Blender, Allez sur Edit\\Preferences . Sur le pr\u00e9f\u00e9rences allez sur add-ons puis cliquez sur install en haut \u00e0 droite s\u00e9lectionner le fichier \u00abblender_source_tools_3.2.5.zip\u00bb. Activer \u00abImport-Export: Blender Source Tools\u00bb il faut que la case soit coch\u00e9. Exporter le mod\u00e8le 3D sur Source Aller dans la fen\u00eatre propretie (shift + 7 ou \u00e0 droite si vous \u00eates sur le layout par d\u00e9fault) scene -> source engine Allez sur Scene dans les Properties puis sur Source Engine Export . Export Path: Indiquer le dossier o\u00f9 sera exporter le mod\u00e8le 3D en . smd (modelsrc) Engine Path: Dossier Bin du moteur ( exemple: /steam/steamapps/common/Counter-Strike Global Offensive/bin ) Material Path: Texture du mod\u00e8le 3D (exemple: ( hl2/materials/)models/prop/computer ) ( Seulement si vous choisissez .DMX ) Une fois fait cliquer sur \u00ab Export \u00bb sur Source Engine QC Complies Game Path: - Indiquer le dossier de donn\u00e9es de votre mod (hl2). QC Path: - Fichier .qc avec tout les infos de compilation par .qc dans le m\u00eame dossier que .smd (modelsrc) (pour plus d'info sur le fichier QC cf. 3.3 faire un fichier QC ) une fois appuyer sur Compile All Now cela va activer la compilation. La compilation se passe en 2 \u00e9tape vous aller compiler le mod\u00e8le 3D en .smd puis en .mdl . N'oublier pas d'exporter les textures du mod\u00e8le 3D dans le dossier suivante. \u00abdossier de donn\u00e9es\u00bb /materials/models/ Attention! La collection le mod\u00e8le et le mat\u00e9rials doivent avoir le m\u00eame nom. V\u00e9rifier dans outliner (shift + F9 ou \u00e0 droite du layout par d\u00e9fault) Faire un fichier .QC https://developer.valvesoftware.com/wiki/QC Conversion d'un simple model 3D Fichier .qc est juste un fichier texte, on l'on va mettre dedans les informations lier au type de mod\u00e8le. Remplacer \u00ab myfirstmodel \u00bb par le nom de votre mod\u00e8le. $modelname \"props_sdk\\myfirstmodel.mdl\" //le nom du mod\u00e8le 3D son corps $body mybody \"myfirstmodel-ref.smd\" //les vertex fait sous blender $surfaceprop combine_metal //Le type de surface $cdmaterials \"models\\props_sdk\" //Repertoire de la texture $collisionmodel \"myfirstmodel-phys.smd\" //Les collision $sequence idle \"myfirstmodel-ref.smd\" // S\u00e9quence sans animation Ajouter des informations pour les props Exemple pour un prop en verre $keyvalues { prop_data { \"base\" \"Glass.Base\" // Mat\u00e9riau de base d\u00e9fini comme \"Glass.Base\" \"dmg.explosive\" \"1.0\" // Remplace le comportement explosif de base du verre \"dmg.bullets\" \"1.0\" // Dommages caus\u00e9s par les balles \"health\" \"1\" // Sant\u00e9 du mat\u00e9riau \"damage_table\" \"glass\" // Tableau de dommages nomm\u00e9 \"glass\" } BreakableModels { GlassChunks { models\\gibs\\glass_shard01.mdl // Mod\u00e8le de fragment de verre 01 models\\gibs\\glass_shard02.mdl // Mod\u00e8le de fragment de verre 02 models\\gibs\\glass_shard03.mdl // Mod\u00e8le de fragment de verre 03 models\\gibs\\glass_shard04.mdl // Mod\u00e8le de fragment de verre 04 models\\gibs\\glass_shard05.mdl // Mod\u00e8le de fragment de verre 05 models\\gibs\\glass_shard06.mdl // Mod\u00e8le de fragment de verre 06 } } } V\u00e9rifier mod\u00e8le 3D Aller dans dossier bin et ouvrez le logiciel hlmv ou cliquer sur Launch HLMV sur Ouvrez votre mod\u00e8le 3D et v\u00e9rifier bien qui s'affiche comme il faut. Exporter animation Dans cette exemple, j'utilise le model trouvable dans common\\sourcesdk_content\\hl2\\modelsrc\\humans_sdk\\male_sdk\\male_06_reference.smd . Faite file->import->Source Engine Donner un nom \u00e0 votre animation et exporter la en .smd . Ajouter l'animation dans la liste des sequences du fichier .qc (voir Faire un fichier QC). $sequence \"idle\" \"male_06_reference.smd\" $sequence \"attack\" \"animation1.smd\" fps 24 Vous pouvez visualiser l'animation dans l'onglet Sequence de hlmv .","title":"Mod\u00e8le 3D"},{"location":"model/#modele-3d","text":"https://www.blender.org/ http://steamreview.org/BlenderSourceTools/ Ce chapitre a pour but de mettre vos mod\u00e8les 3d cr\u00e9e dans votre mod source, importation se passe en 2 \u00e9tapes la premier, vous devez export depuis vers un format .smd ou .dmx avant d'exporter vers un fichier .mdl utilisable dans Source.","title":"Mod\u00e8le 3D"},{"location":"model/#cree-un-modele-3d","text":"Nous allons cr\u00e9er un mod\u00e8le 3D sur Blender logiciel gratuit et libre, pour t\u00e9l\u00e9charger Blender cliquer ici . Nous allons ajouter un addon pour cela cliquer ici . Lancez Blender, Allez sur Edit\\Preferences . Sur le pr\u00e9f\u00e9rences allez sur add-ons puis cliquez sur install en haut \u00e0 droite s\u00e9lectionner le fichier \u00abblender_source_tools_3.2.5.zip\u00bb. Activer \u00abImport-Export: Blender Source Tools\u00bb il faut que la case soit coch\u00e9.","title":"Cr\u00e9e un mod\u00e8le 3D"},{"location":"model/#exporter-le-modele-3d-sur-source","text":"Aller dans la fen\u00eatre propretie (shift + 7 ou \u00e0 droite si vous \u00eates sur le layout par d\u00e9fault) scene -> source engine Allez sur Scene dans les Properties puis sur Source Engine Export . Export Path: Indiquer le dossier o\u00f9 sera exporter le mod\u00e8le 3D en . smd (modelsrc) Engine Path: Dossier Bin du moteur ( exemple: /steam/steamapps/common/Counter-Strike Global Offensive/bin ) Material Path: Texture du mod\u00e8le 3D (exemple: ( hl2/materials/)models/prop/computer ) ( Seulement si vous choisissez .DMX ) Une fois fait cliquer sur \u00ab Export \u00bb sur Source Engine QC Complies Game Path: - Indiquer le dossier de donn\u00e9es de votre mod (hl2). QC Path: - Fichier .qc avec tout les infos de compilation par .qc dans le m\u00eame dossier que .smd (modelsrc) (pour plus d'info sur le fichier QC cf. 3.3 faire un fichier QC ) une fois appuyer sur Compile All Now cela va activer la compilation. La compilation se passe en 2 \u00e9tape vous aller compiler le mod\u00e8le 3D en .smd puis en .mdl . N'oublier pas d'exporter les textures du mod\u00e8le 3D dans le dossier suivante. \u00abdossier de donn\u00e9es\u00bb /materials/models/ Attention! La collection le mod\u00e8le et le mat\u00e9rials doivent avoir le m\u00eame nom. V\u00e9rifier dans outliner (shift + F9 ou \u00e0 droite du layout par d\u00e9fault)","title":"Exporter le mod\u00e8le 3D sur Source"},{"location":"model/#faire-un-fichier-qc","text":"https://developer.valvesoftware.com/wiki/QC","title":"Faire un fichier .QC"},{"location":"model/#conversion-dun-simple-model-3d","text":"Fichier .qc est juste un fichier texte, on l'on va mettre dedans les informations lier au type de mod\u00e8le. Remplacer \u00ab myfirstmodel \u00bb par le nom de votre mod\u00e8le. $modelname \"props_sdk\\myfirstmodel.mdl\" //le nom du mod\u00e8le 3D son corps $body mybody \"myfirstmodel-ref.smd\" //les vertex fait sous blender $surfaceprop combine_metal //Le type de surface $cdmaterials \"models\\props_sdk\" //Repertoire de la texture $collisionmodel \"myfirstmodel-phys.smd\" //Les collision $sequence idle \"myfirstmodel-ref.smd\" // S\u00e9quence sans animation","title":"Conversion d'un simple model 3D"},{"location":"model/#ajouter-des-informations-pour-les-props","text":"Exemple pour un prop en verre $keyvalues { prop_data { \"base\" \"Glass.Base\" // Mat\u00e9riau de base d\u00e9fini comme \"Glass.Base\" \"dmg.explosive\" \"1.0\" // Remplace le comportement explosif de base du verre \"dmg.bullets\" \"1.0\" // Dommages caus\u00e9s par les balles \"health\" \"1\" // Sant\u00e9 du mat\u00e9riau \"damage_table\" \"glass\" // Tableau de dommages nomm\u00e9 \"glass\" } BreakableModels { GlassChunks { models\\gibs\\glass_shard01.mdl // Mod\u00e8le de fragment de verre 01 models\\gibs\\glass_shard02.mdl // Mod\u00e8le de fragment de verre 02 models\\gibs\\glass_shard03.mdl // Mod\u00e8le de fragment de verre 03 models\\gibs\\glass_shard04.mdl // Mod\u00e8le de fragment de verre 04 models\\gibs\\glass_shard05.mdl // Mod\u00e8le de fragment de verre 05 models\\gibs\\glass_shard06.mdl // Mod\u00e8le de fragment de verre 06 } } }","title":"Ajouter des informations pour les props"},{"location":"model/#verifier-modele-3d","text":"Aller dans dossier bin et ouvrez le logiciel hlmv ou cliquer sur Launch HLMV sur Ouvrez votre mod\u00e8le 3D et v\u00e9rifier bien qui s'affiche comme il faut.","title":"V\u00e9rifier mod\u00e8le 3D"},{"location":"model/#exporter-animation","text":"Dans cette exemple, j'utilise le model trouvable dans common\\sourcesdk_content\\hl2\\modelsrc\\humans_sdk\\male_sdk\\male_06_reference.smd . Faite file->import->Source Engine Donner un nom \u00e0 votre animation et exporter la en .smd . Ajouter l'animation dans la liste des sequences du fichier .qc (voir Faire un fichier QC). $sequence \"idle\" \"male_06_reference.smd\" $sequence \"attack\" \"animation1.smd\" fps 24 Vous pouvez visualiser l'animation dans l'onglet Sequence de hlmv .","title":"Exporter animation"},{"location":"optimisation/","text":"Optimisation https://www.youtube.com/watch?v=FRwAmlOT4zc Le moteur source utilise pour faire leurs optimisation un arbre BSP ( binary space partitioning) celui-ci permet d'organiser les pi\u00e8ces d'une cartes dans un ordre hi\u00e9rarchique le principe \u00e9tant que ceux que le joueur ne voit pas, ne soit pas charger et donc \u00e9conomiser en ressource Ici l'arbre commence par A et se divise en sous cat\u00e9gories. Quand le jeu Calculs D3, l'ordinateur sait qu'il n'a pas besoin de charger B1 car la pi\u00e8ce n'est pas reli\u00e9e. Visleaves Le Source Engine utilise Vis pour cr\u00e9er son Abre BSP , il divise les salles lors de l'optimisation La commande \" mat_leafvis 3 \" sur la console permet de les voir en jeu Exemple de vis visible en jeu Pour plus d'information sur les vis il y a cette vid\u00e9o : POURQUOI NOS JEUX SONT MAL OPTIMIS\u00c9S ? Texture d'Optimisation Dans la liste des textures, il existe certaines textures qui permettent d'am\u00e9liorer l'optimisation du jeu, elles sont invisible pour le joueur. Hints Malheureusement vis ne comprend pas toujours comment bien cr\u00e9e les pi\u00e8ces, dans le choix des textures lorsque l'on cr\u00e9e un block, nous avons une Texture \"Hints\" celle-ci permet d'indiquer qu'une pi\u00e8ce est ferm\u00e9 Nodraw Les Nodraw sont des textures qui n'apparaissent pas, elles sont utilis\u00e9 dans les angles morts ceux que le joueur ne voit pas Areapportals https://developer.valvesoftware.com/wiki/Areaportal Les areaportal sont tr\u00e8s utile pour optimiser la visibilit\u00e9 entre deux Vis d'une porte ou d'une fen\u00eatre. Pour cr\u00e9er un areaportal cr\u00e9e un bloc avec la texture toolsareaportal et transformer ensuite vers une entit\u00e9 (CTRL+T). func_areaportal : AreaPortal normal func_areaportalwindow : AreaPortal qui va en plus faire un fondu, passer une certaine distance sp\u00e9cifier.","title":"Optimisation"},{"location":"optimisation/#optimisation","text":"https://www.youtube.com/watch?v=FRwAmlOT4zc Le moteur source utilise pour faire leurs optimisation un arbre BSP ( binary space partitioning) celui-ci permet d'organiser les pi\u00e8ces d'une cartes dans un ordre hi\u00e9rarchique le principe \u00e9tant que ceux que le joueur ne voit pas, ne soit pas charger et donc \u00e9conomiser en ressource Ici l'arbre commence par A et se divise en sous cat\u00e9gories. Quand le jeu Calculs D3, l'ordinateur sait qu'il n'a pas besoin de charger B1 car la pi\u00e8ce n'est pas reli\u00e9e.","title":"Optimisation"},{"location":"optimisation/#visleaves","text":"Le Source Engine utilise Vis pour cr\u00e9er son Abre BSP , il divise les salles lors de l'optimisation La commande \" mat_leafvis 3 \" sur la console permet de les voir en jeu Exemple de vis visible en jeu Pour plus d'information sur les vis il y a cette vid\u00e9o : POURQUOI NOS JEUX SONT MAL OPTIMIS\u00c9S ?","title":"Visleaves"},{"location":"optimisation/#texture-doptimisation","text":"Dans la liste des textures, il existe certaines textures qui permettent d'am\u00e9liorer l'optimisation du jeu, elles sont invisible pour le joueur. Hints Malheureusement vis ne comprend pas toujours comment bien cr\u00e9e les pi\u00e8ces, dans le choix des textures lorsque l'on cr\u00e9e un block, nous avons une Texture \"Hints\" celle-ci permet d'indiquer qu'une pi\u00e8ce est ferm\u00e9 Nodraw Les Nodraw sont des textures qui n'apparaissent pas, elles sont utilis\u00e9 dans les angles morts ceux que le joueur ne voit pas Areapportals https://developer.valvesoftware.com/wiki/Areaportal Les areaportal sont tr\u00e8s utile pour optimiser la visibilit\u00e9 entre deux Vis d'une porte ou d'une fen\u00eatre. Pour cr\u00e9er un areaportal cr\u00e9e un bloc avec la texture toolsareaportal et transformer ensuite vers une entit\u00e9 (CTRL+T). func_areaportal : AreaPortal normal func_areaportalwindow : AreaPortal qui va en plus faire un fondu, passer une certaine distance sp\u00e9cifier.","title":"Texture d'Optimisation"},{"location":"particle/","text":"\u00c9diteur de particules https://developer.valvesoftware.com/wiki/Category:Particle_System Les particules servent \u00e0 cr\u00e9er toutes sortes d'effets de la fum\u00e9e \u00e0 un feu en passant par un tir au blaster. Pour ouvrir l'\u00e9diteur de particules, il faut mettre la commande. -tools -nop4 en options de lancement steam, une fois lanc\u00e9 aller sur tools->Particle Editor Les particules se base sur un mat\u00e9rial Il existe plusieurs Properties Properties Permet de selectionner le mat\u00e9rial servant de base aux particules. Renderer Pemet de d\u00e9finir comment la particule sera dans le rendu. Operator Permet l'execution d'une fonction sur chaque particule pour chaque image ainsi que le mouvement de celles-ci. Initializer Permet de D\u00e9finir l'\u00e9tat de d\u00e9part des particules cr\u00e9e, ainsi que sa couleur, sa taille ou son alpha. Emitter D\u00e9finit le nombre de particules cr\u00e9e et dans quelle p\u00e9riode de temps. Cr\u00e9ez votre premier syst\u00e8me de particule Pour cr\u00e9e son syst\u00e8me de particules. Ajouter allons sur les Properties en bas \u00e0 gauche cliquer dessus et aller sur Renderer ajoutez \"Animated Sprite Renderer\". Nous voulons sp\u00e9cifier o\u00f9 nous avons cr\u00e9e pour cela, nous allons sur Initializers puis add \"Position Within Sphere Initializer\" l\u00e0-dessus metter \"speed_min\" et \"speed_max' \u00e0 64, sans sp\u00e9cifier une position initiale les particules ne sauront pas apparaitre correctement. Sur Emitter add \"emit_Continuously\", vous devrez voir un carr\u00e9 blanc appara\u00eetre. Maintenant allons sur Operator faite add \"Movement Basic\" pour faire bouger les particules Maintenant, vous devrez voir bouger les carr\u00e9s blanc, une fois fait ajoutez \"Lifespan decay\" cela d\u00e9finit la dur\u00e9e de vie de la particule. Allons sur Initializer add \"Lifetime Random\" nous allons d\u00e9finir la dur\u00e9e de vie sur \"lifetime_min\" sur 2 et \"lifetime_max\" sur 4. Maintenant, nous allons prendre un meilleur material que des cubes blancs pour cela allons sur Properties et appuyons sur les trois points de \"material\", nous vous conseillons d'essayer \"blueblacklargebeam.vmt\" ou \"hydragutbeam.vmt\". Pour finir sur Operator , nous allons ajouter un \"Alpha Out Random\" cela permet de donn\u00e9es une valeur \u00e0 sa dur\u00e9e de vie, la particule va devenir transparente avant de disparaitre. Performance Max_particles Sur les Properties, nous pouvons d\u00e9finir la valeur maximum des particules de base, elle est \u00e0 1000 (1004)m de base, nous n'allons pas d\u00e9passer mille particules. Particles Function Name Nous n'allons pas d\u00e9tailler tous les Function Name, mais nous allons d\u00e9crire les plus importantes. Renderer Render_animated_sprites C'est le moteur de rendu de base, il cr\u00e9e des sprites anim\u00e9. Render_rope Permet de faire un rendu des particules comme une corde. Tr\u00e8s utile pour faire certaines fum\u00e9es ou des effets d'\u00e9lectricit\u00e9 et de foudre. Render_Blobs Ce rendu est fait pour les gouttes et les liquides, il est utilis\u00e9 dans Portal 2 pour le Gel. Operators Lifespan Decay Avec les \"Alpha_fade\" Elles Permettent de faire disparaitre les particules cela leurs donne une dur\u00e9e de vie. Oscillate Permet de faire des effets de particules Ondul\u00e9, il y en a deux \"Oscillate Scalar\" et \"Oscillate Vector\". Initializers Color Random Permet de donner \u00e0 certaines particules une couleur al\u00e9atoire. Mettre et tester les particules dans votre map Dans hammer placer infor_partcile_system . Pour redemarer les particules ent_fire info_particle_system stop ent_fire info_particle_system start","title":"\u00c9diteur de particules"},{"location":"particle/#editeur-de-particules","text":"https://developer.valvesoftware.com/wiki/Category:Particle_System Les particules servent \u00e0 cr\u00e9er toutes sortes d'effets de la fum\u00e9e \u00e0 un feu en passant par un tir au blaster. Pour ouvrir l'\u00e9diteur de particules, il faut mettre la commande. -tools -nop4 en options de lancement steam, une fois lanc\u00e9 aller sur tools->Particle Editor Les particules se base sur un mat\u00e9rial Il existe plusieurs Properties Properties Permet de selectionner le mat\u00e9rial servant de base aux particules. Renderer Pemet de d\u00e9finir comment la particule sera dans le rendu. Operator Permet l'execution d'une fonction sur chaque particule pour chaque image ainsi que le mouvement de celles-ci. Initializer Permet de D\u00e9finir l'\u00e9tat de d\u00e9part des particules cr\u00e9e, ainsi que sa couleur, sa taille ou son alpha. Emitter D\u00e9finit le nombre de particules cr\u00e9e et dans quelle p\u00e9riode de temps.","title":"\u00c9diteur de particules"},{"location":"particle/#creez-votre-premier-systeme-de-particule","text":"Pour cr\u00e9e son syst\u00e8me de particules. Ajouter allons sur les Properties en bas \u00e0 gauche cliquer dessus et aller sur Renderer ajoutez \"Animated Sprite Renderer\". Nous voulons sp\u00e9cifier o\u00f9 nous avons cr\u00e9e pour cela, nous allons sur Initializers puis add \"Position Within Sphere Initializer\" l\u00e0-dessus metter \"speed_min\" et \"speed_max' \u00e0 64, sans sp\u00e9cifier une position initiale les particules ne sauront pas apparaitre correctement. Sur Emitter add \"emit_Continuously\", vous devrez voir un carr\u00e9 blanc appara\u00eetre. Maintenant allons sur Operator faite add \"Movement Basic\" pour faire bouger les particules Maintenant, vous devrez voir bouger les carr\u00e9s blanc, une fois fait ajoutez \"Lifespan decay\" cela d\u00e9finit la dur\u00e9e de vie de la particule. Allons sur Initializer add \"Lifetime Random\" nous allons d\u00e9finir la dur\u00e9e de vie sur \"lifetime_min\" sur 2 et \"lifetime_max\" sur 4. Maintenant, nous allons prendre un meilleur material que des cubes blancs pour cela allons sur Properties et appuyons sur les trois points de \"material\", nous vous conseillons d'essayer \"blueblacklargebeam.vmt\" ou \"hydragutbeam.vmt\". Pour finir sur Operator , nous allons ajouter un \"Alpha Out Random\" cela permet de donn\u00e9es une valeur \u00e0 sa dur\u00e9e de vie, la particule va devenir transparente avant de disparaitre. Performance Max_particles Sur les Properties, nous pouvons d\u00e9finir la valeur maximum des particules de base, elle est \u00e0 1000 (1004)m de base, nous n'allons pas d\u00e9passer mille particules.","title":"Cr\u00e9ez votre premier syst\u00e8me de particule"},{"location":"particle/#particles-function-name","text":"Nous n'allons pas d\u00e9tailler tous les Function Name, mais nous allons d\u00e9crire les plus importantes. Renderer Render_animated_sprites C'est le moteur de rendu de base, il cr\u00e9e des sprites anim\u00e9. Render_rope Permet de faire un rendu des particules comme une corde. Tr\u00e8s utile pour faire certaines fum\u00e9es ou des effets d'\u00e9lectricit\u00e9 et de foudre. Render_Blobs Ce rendu est fait pour les gouttes et les liquides, il est utilis\u00e9 dans Portal 2 pour le Gel. Operators Lifespan Decay Avec les \"Alpha_fade\" Elles Permettent de faire disparaitre les particules cela leurs donne une dur\u00e9e de vie. Oscillate Permet de faire des effets de particules Ondul\u00e9, il y en a deux \"Oscillate Scalar\" et \"Oscillate Vector\". Initializers Color Random Permet de donner \u00e0 certaines particules une couleur al\u00e9atoire.","title":"Particles Function Name"},{"location":"particle/#mettre-et-tester-les-particules-dans-votre-map","text":"Dans hammer placer infor_partcile_system . Pour redemarer les particules ent_fire info_particle_system stop ent_fire info_particle_system start","title":"Mettre et tester les particules dans votre map"},{"location":"probleme/","text":"Probl\u00e8mes Unable To find gameinfo.txt. Solution: Le logiciel utilise ne sait pas quelle est votre projet pour cela nous allons lui donner avec la commande suivante dans la console de window. Cr\u00e9e un fichier batch (il suffit de cr\u00e9er un fichier bloc note et de mettre \u00e0 la fin .bat ). setx VProject \"C:\\\\Program Files(x86)\\Steam\\steamapps\\common\\Source SDK Base 2013Singleplayer\\\u00abmod_name\u00bb\\\" Models may not load in Faceposer Ouvrir l'\u00e9diteur de registre et supprimer : HKEY_USERS\\..\\Software\\Valve\\faceposer Steam API Si vous avez un probl\u00e8me qui emp\u00e8che le jeu de d\u00e9marer, aller dans steam_api.h et metter en commentaire les ligne suivantes. /* m_pSteamMusicRemote = SteamClient()->GetISteamMusicRemote( hSteamUser, hSteamPipe, STEAMMUSICREMOTE_INTERFACE_VERSION ); if ( !m_pSteamMusicRemote ) { return false; } */ /* m_pSteamHTMLSurface = SteamClient()->GetISteamHTMLSurface( hSteamUser, hSteamPipe, STEAMHTMLSURFACE_INTERFACE_VERSION ); if ( !m_pSteamHTMLSurface ) { return false; } */","title":"Probl\u00e8mes"},{"location":"probleme/#problemes","text":"","title":"Probl\u00e8mes"},{"location":"probleme/#unable-to-find-gameinfotxt-solution","text":"Le logiciel utilise ne sait pas quelle est votre projet pour cela nous allons lui donner avec la commande suivante dans la console de window. Cr\u00e9e un fichier batch (il suffit de cr\u00e9er un fichier bloc note et de mettre \u00e0 la fin .bat ). setx VProject \"C:\\\\Program Files(x86)\\Steam\\steamapps\\common\\Source SDK Base 2013Singleplayer\\\u00abmod_name\u00bb\\\"","title":"Unable To find gameinfo.txt. Solution:"},{"location":"probleme/#models-may-not-load-in-faceposer","text":"Ouvrir l'\u00e9diteur de registre et supprimer : HKEY_USERS\\..\\Software\\Valve\\faceposer","title":"Models may not load in Faceposer"},{"location":"probleme/#steam-api","text":"Si vous avez un probl\u00e8me qui emp\u00e8che le jeu de d\u00e9marer, aller dans steam_api.h et metter en commentaire les ligne suivantes. /* m_pSteamMusicRemote = SteamClient()->GetISteamMusicRemote( hSteamUser, hSteamPipe, STEAMMUSICREMOTE_INTERFACE_VERSION ); if ( !m_pSteamMusicRemote ) { return false; } */ /* m_pSteamHTMLSurface = SteamClient()->GetISteamHTMLSurface( hSteamUser, hSteamPipe, STEAMHTMLSURFACE_INTERFACE_VERSION ); if ( !m_pSteamHTMLSurface ) { return false; } */","title":"Steam API"},{"location":"programmation/","text":"Programmation en C++ https://visualstudio.microsoft.com/fr/downloads/ https://visualstudio.microsoft.com/fr/vs/older-downloads/ https://github.com/ValveSoftware/source-sdk-2013 https://git-scm.com/downloads https://archive.org/details/en_visual_studio_community_2013_with_update_5_x86_dvd_6816332 Avec la programmation, vous pourrez cr\u00e9er vos propres entit\u00e9s que ce soit arme, npc, etc... Nous allons pouvoir g\u00e9n\u00e9rer deux fichiers .dll qui contienne les r\u00e8gles de notre que ce soit c\u00f4t\u00e9 serveur ou client. T\u00e9l\u00e9chargement et installer le code source du source sdk 2013 Maintenant, nous allons t\u00e9l\u00e9charger le code sur le lien Github Si vous avez Git d'installer sur votre ordinateur, vous pouvez utiliser la commande suivante. git clone https://github.com/ValveSoftware/source-sdk-2013 Pour apprendre \u00e0 utiliser Git cliquer ici . Compiler sur Windows 8.2.1 Installer Visual Studio Pour modifier le code source de notre mode, nous avons besoin de visual studio t\u00e9l\u00e9charger visual studio avec le lien au d\u00e9but du chapitre. Nous avons aussi besoin pour sourcesdk 2013 d'avoir les package Redistribuable de 2013 . Il faut prendre la version 64 bit (x64). Installer la version de visual studio 2013 pour \u00eatre s\u00fbr d'avoir tout l'environnement de compilation. (Vous pouvez travailler sur visual studio 2019 ou 2022, mais il faut avoir la version 2013 install\u00e9 pour qui puisse fonctionner.) https://archive.org/details/en_visual_studio_community_2013_with_update_5_x86_dvd_6816332 Installer les fonctionnalit\u00e9s C++ sous Windows Avec Visual studio installer , installer les d\u00e9pendance C++. Executer le code Maintenant ex\u00e9cuter le fichier creategameprojects.bat pour cr\u00e9er un projet. Un fichier game.sln devrait appara\u00eetre si ce n'est pas le cas les packages Redistribuable 2013 ne sont pas install\u00e9 ou vous devez red\u00e9marrer votre pc. Un jeu sur le source se comporte de la mani\u00e8re suivante un c\u00f4t\u00e9 serveur et un c\u00f4t\u00e9 client avec des r\u00e8gles dans chaque partie. Le client et le server . dll se trouve dans le dossier bin du mod. Solutions Explorer -> client (hl2) -> propertie Solutions Explorer -> server (hl2) -> propertie Sur Visual Studio allez sur Client faites un clique droit dessus cliquer sur \"Properties\" . Mettre en sortie le dossier bin de votre mod! Faites de m\u00eame avec Server. Puis mettre les arguments suivant pour le debugging. -console -allowdebug -dev -sw -game nameOfYourMod Vous pouvez lancer le debugging de votre code. Compiler sur Linux Installer les fonctionnalit\u00e9s C++ sous Linux Sous Ubuntu sudo apt-get install build-essential sudo apt-get install gcc-multilib g++-multilib Sous Arch sudo pacman -S base-devel gcc dpkg Initialiser le projet. cd [SDK_ROOT]/[GAME]/src/ bash ./creategameprojects Installer les ressources steam cd / sudo mkdir valve cd valve sudo wget https://media.steampowered.com/client/runtime/steam-runtime-sdk_latest.tar.xz sudo tar xvf steam-runtime-sdk_latest.tar.xz sudo mv steam-runtime-sdk_2013-09-05 steam-runtime #sudo chown <USER>:<GROUP> * -R cd /valve/steam-runtime/ ./setup.sh Vous pouvez maintenant compiler. make -f [MAKEFILE].mak Pour compiler seulement le client en debug. cd /[SDK_ROOT]/[GAME]/src/game/client/ make -f client_linux32_hl2.mak CFG=debug Cr\u00e9e un nouveau projet dans src/vpc_scripts/projects.vgc . Par exemple on cr\u00e9e un nouveau projet client. $Project \"client\" { \"game\\client\\client_hl2.vpc\" [($WIN32||$X360||$POSIX) && $HL2] \"game\\client\\client_episodic.vpc\" [($WIN32||$X360||$POSIX) && $EPISODIC] \"game\\client\\client_custom.vpc\" [($WIN32||$X360||$POSIX) && $CUSTOM] } On ajoute le jeu parmis nos projets dans src/vpc_scripts/default.vgc . //----------------------------------------------------------------------------- // DEFAULT.VGC // // Configurations for all Source(TM) Projects //----------------------------------------------------------------------------- //////////////// // Game Names // //////////////// $Games { \"EPISODIC\" \"HL2\" \"CUSTOM\" } // Makes the VPC scripts work in the SDK's context $Conditional \"SOURCESDK\" \"1\" $Include \"vpc_scripts\\projects.vgc\" $Include \"vpc_scripts\\groups.vgc\" Dans le fichier client que nous avons cr\u00e9er. //----------------------------------------------------------------------------- // SERVER_CUSTOM.VPC // // Project Script //----------------------------------------------------------------------------- $Macro SRCDIR \"..\\..\" $Macro GAMENAME \"custom\" [!$SOURCESDK] $Macro GAMENAME \"custom\" [$SOURCESDK] $Include \"$SRCDIR\\game\\server\\server_base.vpc\" $Configuration { $Compiler { $AdditionalIncludeDirectories \"$BASE;$SRCDIR\\game\\shared\\hl2;.\\hl2;.\\custom\" $PreprocessorDefinitions \"$BASE;HL2_DLL;USES_SAVERESTORE\" } } $Project \"Server (custom)\" //name of project { $Folder \"Source Files\" //Folder with source files { $Folder \"custom\" { $File \"custom\\message_player.cpp\" $File \"custom\\message_player.h\" } } } Plus qu'ajouter le projet dans le fichier creategameprojects.bat . devtools\\bin\\vpc.exe /hl2 /episodic /custom +game /mksln games.sln Ajouter une entit\u00e9 http://en.wikipedia.org/wiki/C%2B%2B Les entit\u00e9s ont le mode defonctionnement suivant : constructor : Qui va mettre les valeurs par d\u00e9faut. Spawn : Quant entit\u00e9 va apparaitre (calcule de colision, model 3D, etc...) Activate : Activation de l'entit\u00e9. Think : Routine de l'entit\u00e9. Ajouter un fichier header ( .h ) avec notre class . Il faut d\u00e9clarer la class avec un nom et la class dont elle h\u00e9rite. Pour une entit\u00e9, ont h\u00e9rite de CBaseEntity . /** * @file message_player.h */ #pragma once #include \"cbase.h\" /** * @class Message_Player */ class Message_Player : public CBaseEntity { DECLARE_CLASS(Message_Player, CBaseEntity); public: Message_Player(); void Spawn(); }; On va ensuite \u00e9crire ce que vont faires les fonctions dans le fichier c++ ( .cpp ). Ici, on va juste afficher un message dans la console et lier notre class \u00e0 une entit\u00e9. /** * @file message_player.cpp */ #include \"cbase.h\" #include \"message_player.h\" /** * */ Message_Player::Message_Player() { } /** * */ void Message_Player::Spawn() { BaseClass::Spawn(); // Call the base class\\'s Spawn function Msg(\"Message player\\n\"); Msg(\"Ma grosse bite 2\\n\"); // Perform any necessary initialization when the entity is spawned in the game } LINK_ENTITY_TO_CLASS(message_player, Message_Player); On peut placer notre entit\u00e9 dans hammer . Attention : Il se peut que votre entit\u00e9 cr\u00e9e ne soit pas r\u00e9pertori\u00e9 dans hammer et que vous avez le logo obsol\u00e8te pour ajouter votre class \u00e0 la liste, cf. 6.2 Ajouter une entit\u00e9 dans le r\u00e9pertoire de hammer . Changer la vitesse du joueur Dans le fichier hl2_player.cpp . ConVar hl2_walkspeed( \"hl2_walkspeed\", \"150\" ); ConVar hl2_normspeed( \"hl2_normspeed\", \"190\" ); ConVar hl2_sprintspeed( \"hl2_sprintspeed\", \"320\" ); Nous avons 3 valeurs de vitesse que nous pouvons modifier. Ou dans le fichier shareddefs.h . #define MAX_CLIMB_SPEED 200 #if defined(TF_DLL) || defined(TF_CLIENT_DLL) #define TIME_TO_DUCK 0.2 #define TIME_TO_DUCK_MS 200.0f #else #define TIME_TO_DUCK 0.4 #define TIME_TO_DUCK_MS 400.0f #endif #define TIME_TO_UNDUCK 0.2 #define TIME_TO_UNDUCK_MS 200.0f","title":"Programmation en C++"},{"location":"programmation/#programmation-en-c","text":"https://visualstudio.microsoft.com/fr/downloads/ https://visualstudio.microsoft.com/fr/vs/older-downloads/ https://github.com/ValveSoftware/source-sdk-2013 https://git-scm.com/downloads https://archive.org/details/en_visual_studio_community_2013_with_update_5_x86_dvd_6816332 Avec la programmation, vous pourrez cr\u00e9er vos propres entit\u00e9s que ce soit arme, npc, etc... Nous allons pouvoir g\u00e9n\u00e9rer deux fichiers .dll qui contienne les r\u00e8gles de notre que ce soit c\u00f4t\u00e9 serveur ou client.","title":"Programmation en C++"},{"location":"programmation/#telechargement-et-installer-le-code-source-du-source-sdk-2013","text":"Maintenant, nous allons t\u00e9l\u00e9charger le code sur le lien Github Si vous avez Git d'installer sur votre ordinateur, vous pouvez utiliser la commande suivante. git clone https://github.com/ValveSoftware/source-sdk-2013 Pour apprendre \u00e0 utiliser Git cliquer ici .","title":"T\u00e9l\u00e9chargement et installer le code source du source sdk 2013"},{"location":"programmation/#compiler-sur-windows","text":"","title":"Compiler sur Windows"},{"location":"programmation/#821-installer-visual-studio","text":"Pour modifier le code source de notre mode, nous avons besoin de visual studio t\u00e9l\u00e9charger visual studio avec le lien au d\u00e9but du chapitre. Nous avons aussi besoin pour sourcesdk 2013 d'avoir les package Redistribuable de 2013 . Il faut prendre la version 64 bit (x64). Installer la version de visual studio 2013 pour \u00eatre s\u00fbr d'avoir tout l'environnement de compilation. (Vous pouvez travailler sur visual studio 2019 ou 2022, mais il faut avoir la version 2013 install\u00e9 pour qui puisse fonctionner.) https://archive.org/details/en_visual_studio_community_2013_with_update_5_x86_dvd_6816332","title":"8.2.1 Installer Visual Studio"},{"location":"programmation/#installer-les-fonctionnalites-c-sous-windows","text":"Avec Visual studio installer , installer les d\u00e9pendance C++.","title":"Installer les fonctionnalit\u00e9s C++ sous Windows"},{"location":"programmation/#executer-le-code","text":"Maintenant ex\u00e9cuter le fichier creategameprojects.bat pour cr\u00e9er un projet. Un fichier game.sln devrait appara\u00eetre si ce n'est pas le cas les packages Redistribuable 2013 ne sont pas install\u00e9 ou vous devez red\u00e9marrer votre pc. Un jeu sur le source se comporte de la mani\u00e8re suivante un c\u00f4t\u00e9 serveur et un c\u00f4t\u00e9 client avec des r\u00e8gles dans chaque partie. Le client et le server . dll se trouve dans le dossier bin du mod. Solutions Explorer -> client (hl2) -> propertie Solutions Explorer -> server (hl2) -> propertie Sur Visual Studio allez sur Client faites un clique droit dessus cliquer sur \"Properties\" . Mettre en sortie le dossier bin de votre mod! Faites de m\u00eame avec Server. Puis mettre les arguments suivant pour le debugging. -console -allowdebug -dev -sw -game nameOfYourMod Vous pouvez lancer le debugging de votre code.","title":"Executer le code"},{"location":"programmation/#compiler-sur-linux","text":"","title":"Compiler sur Linux"},{"location":"programmation/#installer-les-fonctionnalites-c-sous-linux","text":"Sous Ubuntu sudo apt-get install build-essential sudo apt-get install gcc-multilib g++-multilib Sous Arch sudo pacman -S base-devel gcc dpkg Initialiser le projet. cd [SDK_ROOT]/[GAME]/src/ bash ./creategameprojects","title":"Installer les fonctionnalit\u00e9s C++ sous Linux"},{"location":"programmation/#installer-les-ressources-steam","text":"cd / sudo mkdir valve cd valve sudo wget https://media.steampowered.com/client/runtime/steam-runtime-sdk_latest.tar.xz sudo tar xvf steam-runtime-sdk_latest.tar.xz sudo mv steam-runtime-sdk_2013-09-05 steam-runtime #sudo chown <USER>:<GROUP> * -R cd /valve/steam-runtime/ ./setup.sh Vous pouvez maintenant compiler. make -f [MAKEFILE].mak Pour compiler seulement le client en debug. cd /[SDK_ROOT]/[GAME]/src/game/client/ make -f client_linux32_hl2.mak CFG=debug","title":"Installer les ressources steam"},{"location":"programmation/#cree-un-nouveau-projet","text":"dans src/vpc_scripts/projects.vgc . Par exemple on cr\u00e9e un nouveau projet client. $Project \"client\" { \"game\\client\\client_hl2.vpc\" [($WIN32||$X360||$POSIX) && $HL2] \"game\\client\\client_episodic.vpc\" [($WIN32||$X360||$POSIX) && $EPISODIC] \"game\\client\\client_custom.vpc\" [($WIN32||$X360||$POSIX) && $CUSTOM] } On ajoute le jeu parmis nos projets dans src/vpc_scripts/default.vgc . //----------------------------------------------------------------------------- // DEFAULT.VGC // // Configurations for all Source(TM) Projects //----------------------------------------------------------------------------- //////////////// // Game Names // //////////////// $Games { \"EPISODIC\" \"HL2\" \"CUSTOM\" } // Makes the VPC scripts work in the SDK's context $Conditional \"SOURCESDK\" \"1\" $Include \"vpc_scripts\\projects.vgc\" $Include \"vpc_scripts\\groups.vgc\" Dans le fichier client que nous avons cr\u00e9er. //----------------------------------------------------------------------------- // SERVER_CUSTOM.VPC // // Project Script //----------------------------------------------------------------------------- $Macro SRCDIR \"..\\..\" $Macro GAMENAME \"custom\" [!$SOURCESDK] $Macro GAMENAME \"custom\" [$SOURCESDK] $Include \"$SRCDIR\\game\\server\\server_base.vpc\" $Configuration { $Compiler { $AdditionalIncludeDirectories \"$BASE;$SRCDIR\\game\\shared\\hl2;.\\hl2;.\\custom\" $PreprocessorDefinitions \"$BASE;HL2_DLL;USES_SAVERESTORE\" } } $Project \"Server (custom)\" //name of project { $Folder \"Source Files\" //Folder with source files { $Folder \"custom\" { $File \"custom\\message_player.cpp\" $File \"custom\\message_player.h\" } } } Plus qu'ajouter le projet dans le fichier creategameprojects.bat . devtools\\bin\\vpc.exe /hl2 /episodic /custom +game /mksln games.sln","title":"Cr\u00e9e un nouveau projet"},{"location":"programmation/#ajouter-une-entite","text":"http://en.wikipedia.org/wiki/C%2B%2B Les entit\u00e9s ont le mode defonctionnement suivant : constructor : Qui va mettre les valeurs par d\u00e9faut. Spawn : Quant entit\u00e9 va apparaitre (calcule de colision, model 3D, etc...) Activate : Activation de l'entit\u00e9. Think : Routine de l'entit\u00e9. Ajouter un fichier header ( .h ) avec notre class . Il faut d\u00e9clarer la class avec un nom et la class dont elle h\u00e9rite. Pour une entit\u00e9, ont h\u00e9rite de CBaseEntity . /** * @file message_player.h */ #pragma once #include \"cbase.h\" /** * @class Message_Player */ class Message_Player : public CBaseEntity { DECLARE_CLASS(Message_Player, CBaseEntity); public: Message_Player(); void Spawn(); }; On va ensuite \u00e9crire ce que vont faires les fonctions dans le fichier c++ ( .cpp ). Ici, on va juste afficher un message dans la console et lier notre class \u00e0 une entit\u00e9. /** * @file message_player.cpp */ #include \"cbase.h\" #include \"message_player.h\" /** * */ Message_Player::Message_Player() { } /** * */ void Message_Player::Spawn() { BaseClass::Spawn(); // Call the base class\\'s Spawn function Msg(\"Message player\\n\"); Msg(\"Ma grosse bite 2\\n\"); // Perform any necessary initialization when the entity is spawned in the game } LINK_ENTITY_TO_CLASS(message_player, Message_Player); On peut placer notre entit\u00e9 dans hammer . Attention : Il se peut que votre entit\u00e9 cr\u00e9e ne soit pas r\u00e9pertori\u00e9 dans hammer et que vous avez le logo obsol\u00e8te pour ajouter votre class \u00e0 la liste, cf. 6.2 Ajouter une entit\u00e9 dans le r\u00e9pertoire de hammer .","title":"Ajouter une entit\u00e9"},{"location":"programmation/#changer-la-vitesse-du-joueur","text":"Dans le fichier hl2_player.cpp . ConVar hl2_walkspeed( \"hl2_walkspeed\", \"150\" ); ConVar hl2_normspeed( \"hl2_normspeed\", \"190\" ); ConVar hl2_sprintspeed( \"hl2_sprintspeed\", \"320\" ); Nous avons 3 valeurs de vitesse que nous pouvons modifier. Ou dans le fichier shareddefs.h . #define MAX_CLIMB_SPEED 200 #if defined(TF_DLL) || defined(TF_CLIENT_DLL) #define TIME_TO_DUCK 0.2 #define TIME_TO_DUCK_MS 200.0f #else #define TIME_TO_DUCK 0.4 #define TIME_TO_DUCK_MS 400.0f #endif #define TIME_TO_UNDUCK 0.2 #define TIME_TO_UNDUCK_MS 200.0f","title":"Changer la vitesse du joueur"},{"location":"repertoire_et_creation_dun_projet/","text":"Les R\u00e9pertoires et cr\u00e9ation d'un projet https://developer.valvesoftware.com/wiki/Source_SDK_Files_and_Directory_Structure Ce chapitre \u00e0 pour but de vous expliquer comment marche le syst\u00e8me de fichier d'un jeu qui marche avec le Source. Pour placer correctement vos diff\u00e9rentes ressources, il faut cr\u00e9e un fichier GameInfo.txt pour indiquer de quel type de jeu qu'il s'agit. R\u00e9pertoire Racine Les jeux source on ce syst\u00e8me de r\u00e9pertoire Le Dossier Bin , poss\u00e8de les outils et les biblioth\u00e8ques du moteur, aller ici pour trouver Hammer. Le dossier avec les donn\u00e9es (hl2 pour Half-Life 2, left4dead2 pour Left4 Dead 2, etc.) Vous pouvez trouver les fichiers de votre jeu sur les param\u00e8tres devotre jeu Steam, cliquer sur l'engrenage puis sur fichiers locaux. -Des dossiers de donn\u00e9es suppl\u00e9mentaire lier au langues ou DLC (ce n'est pas tr\u00e8s important pour le moment) Cr\u00e9ation de projet et r\u00e9pertoires des donn\u00e9es (Si ces dossiers n'apparaissent pas, c'est normal, ils sont pour la plupart compress\u00e9 en .vpk ) Dans les fichiers du jeu dont nous voulons en faire un mod cr\u00e9e un dossier avec le nom du mod dans notre exemple, nous allons l'appeler \" custom \" Dans ce dossier, nous allons cr\u00e9er plusieurs dossiers voici leurs utilit\u00e9s bin : server.dll et client.dll contient le code compil\u00e9 du mod cfg : Contient des lignes de commande pour la console format .cfg expressions : expresion des npcs pour les scenes de dialogue .txt maps : pour mettre les cartes en format .bps mapsrc : cartes au format .vmt pour qu'on puisse les ouvrirs avec hammer. materials : pour mettre les textures des mod\u00e8les import\u00e9s .vmt et .vtf materialsrc : Texture non compr\u00e9s\u00e9 et non export\u00e9 dans le format valve media : vid\u00e9o au format .bik models : pour mettre les mod\u00e8les import\u00e9s .mdl modelsrc : fichier .smd et .qc du model (vous pouvez mettre en plus le fichier blender) mapsrc/prefabs: pour y mettre les pr\u00e9fabriquer des maps particles : mettre vos particules cr\u00e9e .pcf ressources : ressource divers du jeu (police, icone, menu, etc...) save : sauvegarde du jeu .sav scenes : scene de dialogue des npcs format .vcd scripts : pour mettre les scripts .txt src : mettre ici le code c++ fichier .cpp et .h Les dossiers rc (modelsrc, src, etc...) sont uniquement destin\u00e9e aux d\u00e9veloppeurs. GameInfo Dans le dossier de votre mod, vous devez avoir un gameinfo.txt qui contient les informations primaires de votre mod (Titre, SearchPath, etc...). Le fichier gameinfo.txt d\u00e9crit votre mod. Il contient des m\u00e9tadonn\u00e9es comme le nom du mod, un lien vers votre site web et un manuel, et d\u00e9finit comment on peut y acc\u00e9der. Ce fichier est stock\u00e9 dans le dossier principal de votre mod, et il fait office de marqueur pour Steam, Source et le Source SDK pour d\u00e9tecter son existence. cf. Exemple GameInfo.txt Lancer le mod Fait la commande -game \u00abyourModName\u00bb (dans notre cas custom)","title":"Les R\u00e9pertoires et cr\u00e9ation d'un projet"},{"location":"repertoire_et_creation_dun_projet/#les-repertoires-et-creation-dun-projet","text":"https://developer.valvesoftware.com/wiki/Source_SDK_Files_and_Directory_Structure Ce chapitre \u00e0 pour but de vous expliquer comment marche le syst\u00e8me de fichier d'un jeu qui marche avec le Source. Pour placer correctement vos diff\u00e9rentes ressources, il faut cr\u00e9e un fichier GameInfo.txt pour indiquer de quel type de jeu qu'il s'agit.","title":"Les R\u00e9pertoires et cr\u00e9ation d'un projet"},{"location":"repertoire_et_creation_dun_projet/#repertoire-racine","text":"Les jeux source on ce syst\u00e8me de r\u00e9pertoire Le Dossier Bin , poss\u00e8de les outils et les biblioth\u00e8ques du moteur, aller ici pour trouver Hammer. Le dossier avec les donn\u00e9es (hl2 pour Half-Life 2, left4dead2 pour Left4 Dead 2, etc.) Vous pouvez trouver les fichiers de votre jeu sur les param\u00e8tres devotre jeu Steam, cliquer sur l'engrenage puis sur fichiers locaux. -Des dossiers de donn\u00e9es suppl\u00e9mentaire lier au langues ou DLC (ce n'est pas tr\u00e8s important pour le moment)","title":"R\u00e9pertoire Racine"},{"location":"repertoire_et_creation_dun_projet/#creation-de-projet-et-repertoires-des-donnees","text":"(Si ces dossiers n'apparaissent pas, c'est normal, ils sont pour la plupart compress\u00e9 en .vpk ) Dans les fichiers du jeu dont nous voulons en faire un mod cr\u00e9e un dossier avec le nom du mod dans notre exemple, nous allons l'appeler \" custom \" Dans ce dossier, nous allons cr\u00e9er plusieurs dossiers voici leurs utilit\u00e9s bin : server.dll et client.dll contient le code compil\u00e9 du mod cfg : Contient des lignes de commande pour la console format .cfg expressions : expresion des npcs pour les scenes de dialogue .txt maps : pour mettre les cartes en format .bps mapsrc : cartes au format .vmt pour qu'on puisse les ouvrirs avec hammer. materials : pour mettre les textures des mod\u00e8les import\u00e9s .vmt et .vtf materialsrc : Texture non compr\u00e9s\u00e9 et non export\u00e9 dans le format valve media : vid\u00e9o au format .bik models : pour mettre les mod\u00e8les import\u00e9s .mdl modelsrc : fichier .smd et .qc du model (vous pouvez mettre en plus le fichier blender) mapsrc/prefabs: pour y mettre les pr\u00e9fabriquer des maps particles : mettre vos particules cr\u00e9e .pcf ressources : ressource divers du jeu (police, icone, menu, etc...) save : sauvegarde du jeu .sav scenes : scene de dialogue des npcs format .vcd scripts : pour mettre les scripts .txt src : mettre ici le code c++ fichier .cpp et .h Les dossiers rc (modelsrc, src, etc...) sont uniquement destin\u00e9e aux d\u00e9veloppeurs.","title":"Cr\u00e9ation de projet et r\u00e9pertoires des donn\u00e9es"},{"location":"repertoire_et_creation_dun_projet/#gameinfo","text":"Dans le dossier de votre mod, vous devez avoir un gameinfo.txt qui contient les informations primaires de votre mod (Titre, SearchPath, etc...). Le fichier gameinfo.txt d\u00e9crit votre mod. Il contient des m\u00e9tadonn\u00e9es comme le nom du mod, un lien vers votre site web et un manuel, et d\u00e9finit comment on peut y acc\u00e9der. Ce fichier est stock\u00e9 dans le dossier principal de votre mod, et il fait office de marqueur pour Steam, Source et le Source SDK pour d\u00e9tecter son existence. cf. Exemple GameInfo.txt","title":"GameInfo"},{"location":"repertoire_et_creation_dun_projet/#lancer-le-mod","text":"Fait la commande -game \u00abyourModName\u00bb (dans notre cas custom)","title":"Lancer le mod"},{"location":"ressource/","text":"Textes ,langues et ressources Ce chapitre a pour but d'apprendre \u00e0 utiliser les donn\u00e9es contenues dans le dossier \u00ab Ressource \u00bb du mod, ces fichiers correspond beaucoup o\u00f9 sont plac\u00e9s les textes, dans quelle police. File Description gameinfo.txt Set mod title, icon, and other settings maplist.txt List maps used by the mod Resource/SourceScheme.res Change GUI appearance resource/gamemenu.res Change the UI menu buttons. See Manipulating the game menu items scripts/titles.txt Set some localized strings. See Adding chapters to your mod scripts/ChapterBackgrounds.txt List the chapter background images (used until background map is loaded). See Adding chapters to your mod scripts/kb_act.lst Set the contents of the Keyboard tab of the Options menu. cfg/config_default.cfg Set the default keyboard layout cfg/user_default.scr Add convars to the multiplayer advanced tab. Server Settings GUI Edit the local and dedicated server settings pages. Changer la police du jeu Nous avons besoin d'un d'avoir un fichier .ttf , aller dans \u00ab ressource/clientscheme.res \u00bb CustomFontFiles { \"1\" \"resource/Xposed.ttf\" } Ajouter votre police dans la liste, vous pouvez changer maintenant utiliser cette police, nous pouvons changer la police du titre du jeu ClientTitleFont { \"1\" { \"name\" \"Xposed\" \"tall\" \"32\" \"tall_hidef\" \"46\" \"weight\" \"0\" \"additive\" \"0\" \"antialias\" \"1\" \"custom\" \"1\" [$OSX] } } Changer le menu Dans le fichier \u00ab ressource/gamemenu.res \u00bb \"label\" \"Resume Game\" //*Texte afficher* \"command\" \"ResumeGame\" *//commande dans la console* \"OnlyInGame\" \"1\" *//Ne s'affiche que en jeu (ex: sauvegarde )* \"notmulti\" \"1\" //Ne s'affiche pas si multijoueur Interface utilisateur https://developer.valvesoftware.com/wiki/HudLayout.res L'interface utilisateur est cod\u00e9 en C++ avec la biblioth\u00e8que VGUI qui permet de d\u00e9finir les priorit\u00e9s de la fen\u00eatre, c'est ensuite \u00e0 nous de modifier les variables avec le fichier scripts/hudlayout.res et d\u00e9finir les animations avec hudanimation.txt . Modifier l'affichage des points de vie \"Resource/HudLayout.res\" { HudHealth [$WIN32] { \"fieldName\" \"HudHealth\" \"xpos\" \"16\" \"ypos\" \"432\" \"wide\" \"102\" \"tall\" \"36\" \"visible\" \"1\" \"enabled\" \"1\" \"PaintBackgroundType\" \"2\" \"text_xpos\" \"8\" \"text_ypos\" \"20\" \"digit_xpos\" \"50\" \"digit_ypos\" \"2\" } Modifier une fen\u00eatre VGUI Mettre votre souris sur une fen\u00eatre et faire SHIFT+CTRL+ALT+B. Vous ouvrez le VGUI Build Mode Editor permettant de modifier une fen\u00eatre. Dans le fichier \u00abressource/clientscheme.res\u00bb nous pouvons modifier o\u00f9 est affich\u00e9 le logo du jeu dans le menu. On modifie sa position en X et Y les chiffres correspondent au pixel. // Top-left corner of the \\\"Half-Life 2\\\" on the main screen \"Main.Title1.X\" \"53\" \"Main.Title1.Y\" \"190\" \"Main.Title1.Y_hidef\" \"184\" \"Main.Title1.Color\" \"255 255 255 255\" Pour Changer la couleur des menus, dans le fichier \u00abressource/clientscheme.res\u00bb . Les 4 arguments correspond \u00e0 dans l'ordre Rouge, Vert, Bleu et opacit\u00e9 (transparence) avec une valeur comprise entre 0 et 255 (Pour un octet, un octet fessant 8 bits, cela nous fait 2\\^8=256 possibilit\u00e9s diff\u00e9rentes). ///////////////////// BASE SETTINGS //////////////////////// // // default settings for all panels // controls use these to determine their settings BaseSettings { \"FgColor\" \"0 255 0 100\" \"FgColor_vrmode\" \"0 255 0 200\" \"BgColor\" \"0 0 0 76\" \"Panel.FgColor\" \"0 255 0 100\" \"Panel.BgColor\" \"0 0 0 76\" \"BrightFg\" \"0 255 0 255\" \"DamagedBg\" \"180 0 0 200\" \"DamagedFg\" \"180 0 0 230\" \"BrightDamagedFg\" \"255 0 0 255\" // weapon selection colors \"SelectionNumberFg\" \"0 255 0 255\" \"SelectionTextFg\" \"0 255 0 255\" \"SelectionEmptyBoxBg\" \"0 0 0 80\" \"SelectionBoxBg\" \"0 0 0 80\" \"SelectionSelectedBoxBg\" \"0 0 0 80\" \"ZoomReticleColor\" \" 255 220 0 255\" // HL1-style HUD colors \"Yellowish\" \"0 255 0 255\" \"Normal\" \"255 208 64 255\" \"Caution\" \"255 48 0 255\"","title":"Textes ,langues et ressources"},{"location":"ressource/#textes-langues-et-ressources","text":"Ce chapitre a pour but d'apprendre \u00e0 utiliser les donn\u00e9es contenues dans le dossier \u00ab Ressource \u00bb du mod, ces fichiers correspond beaucoup o\u00f9 sont plac\u00e9s les textes, dans quelle police. File Description gameinfo.txt Set mod title, icon, and other settings maplist.txt List maps used by the mod Resource/SourceScheme.res Change GUI appearance resource/gamemenu.res Change the UI menu buttons. See Manipulating the game menu items scripts/titles.txt Set some localized strings. See Adding chapters to your mod scripts/ChapterBackgrounds.txt List the chapter background images (used until background map is loaded). See Adding chapters to your mod scripts/kb_act.lst Set the contents of the Keyboard tab of the Options menu. cfg/config_default.cfg Set the default keyboard layout cfg/user_default.scr Add convars to the multiplayer advanced tab. Server Settings GUI Edit the local and dedicated server settings pages.","title":"Textes ,langues et ressources"},{"location":"ressource/#changer-la-police-du-jeu","text":"Nous avons besoin d'un d'avoir un fichier .ttf , aller dans \u00ab ressource/clientscheme.res \u00bb CustomFontFiles { \"1\" \"resource/Xposed.ttf\" } Ajouter votre police dans la liste, vous pouvez changer maintenant utiliser cette police, nous pouvons changer la police du titre du jeu ClientTitleFont { \"1\" { \"name\" \"Xposed\" \"tall\" \"32\" \"tall_hidef\" \"46\" \"weight\" \"0\" \"additive\" \"0\" \"antialias\" \"1\" \"custom\" \"1\" [$OSX] } }","title":"Changer la police du jeu"},{"location":"ressource/#changer-le-menu","text":"Dans le fichier \u00ab ressource/gamemenu.res \u00bb \"label\" \"Resume Game\" //*Texte afficher* \"command\" \"ResumeGame\" *//commande dans la console* \"OnlyInGame\" \"1\" *//Ne s'affiche que en jeu (ex: sauvegarde )* \"notmulti\" \"1\" //Ne s'affiche pas si multijoueur","title":"Changer le menu"},{"location":"ressource/#interface-utilisateur","text":"https://developer.valvesoftware.com/wiki/HudLayout.res L'interface utilisateur est cod\u00e9 en C++ avec la biblioth\u00e8que VGUI qui permet de d\u00e9finir les priorit\u00e9s de la fen\u00eatre, c'est ensuite \u00e0 nous de modifier les variables avec le fichier scripts/hudlayout.res et d\u00e9finir les animations avec hudanimation.txt .","title":"Interface utilisateur"},{"location":"ressource/#modifier-laffichage-des-points-de-vie","text":"\"Resource/HudLayout.res\" { HudHealth [$WIN32] { \"fieldName\" \"HudHealth\" \"xpos\" \"16\" \"ypos\" \"432\" \"wide\" \"102\" \"tall\" \"36\" \"visible\" \"1\" \"enabled\" \"1\" \"PaintBackgroundType\" \"2\" \"text_xpos\" \"8\" \"text_ypos\" \"20\" \"digit_xpos\" \"50\" \"digit_ypos\" \"2\" }","title":"Modifier l'affichage des points de vie"},{"location":"ressource/#modifier-une-fenetre-vgui","text":"Mettre votre souris sur une fen\u00eatre et faire SHIFT+CTRL+ALT+B. Vous ouvrez le VGUI Build Mode Editor permettant de modifier une fen\u00eatre. Dans le fichier \u00abressource/clientscheme.res\u00bb nous pouvons modifier o\u00f9 est affich\u00e9 le logo du jeu dans le menu. On modifie sa position en X et Y les chiffres correspondent au pixel. // Top-left corner of the \\\"Half-Life 2\\\" on the main screen \"Main.Title1.X\" \"53\" \"Main.Title1.Y\" \"190\" \"Main.Title1.Y_hidef\" \"184\" \"Main.Title1.Color\" \"255 255 255 255\" Pour Changer la couleur des menus, dans le fichier \u00abressource/clientscheme.res\u00bb . Les 4 arguments correspond \u00e0 dans l'ordre Rouge, Vert, Bleu et opacit\u00e9 (transparence) avec une valeur comprise entre 0 et 255 (Pour un octet, un octet fessant 8 bits, cela nous fait 2\\^8=256 possibilit\u00e9s diff\u00e9rentes). ///////////////////// BASE SETTINGS //////////////////////// // // default settings for all panels // controls use these to determine their settings BaseSettings { \"FgColor\" \"0 255 0 100\" \"FgColor_vrmode\" \"0 255 0 200\" \"BgColor\" \"0 0 0 76\" \"Panel.FgColor\" \"0 255 0 100\" \"Panel.BgColor\" \"0 0 0 76\" \"BrightFg\" \"0 255 0 255\" \"DamagedBg\" \"180 0 0 200\" \"DamagedFg\" \"180 0 0 230\" \"BrightDamagedFg\" \"255 0 0 255\" // weapon selection colors \"SelectionNumberFg\" \"0 255 0 255\" \"SelectionTextFg\" \"0 255 0 255\" \"SelectionEmptyBoxBg\" \"0 0 0 80\" \"SelectionBoxBg\" \"0 0 0 80\" \"SelectionSelectedBoxBg\" \"0 0 0 80\" \"ZoomReticleColor\" \" 255 220 0 255\" // HL1-style HUD colors \"Yellowish\" \"0 255 0 255\" \"Normal\" \"255 208 64 255\" \"Caution\" \"255 48 0 255\"","title":"Modifier une fen\u00eatre VGUI"},{"location":"skybox/","text":"Skybox Une Skybox permet de cr\u00e9er un ciel dans les jeux vid\u00e9o, il en existe deux les Skybox 2D et les Skybox 3D. SkyBox 2D Cr\u00e9e une skybox avec blender Pour faire une Skybox 2D, nous allons utiliser Blender. Dans Blender ajouter les add-ons suivant, ils sont de base sur Blender. (pour aller sur les add-on allez sur Edit->Preferences puis add-on) Appuyer sur \"N\" pour faire d\u00e9filer le menu create et pouvoir cr\u00e9e ajouter un Landscape et un ciel. Ajouter ensuite le ciel cr\u00e9e dans la sc\u00e8ne et assurer vous bien d'\u00eatre en Renderer dans les viewport shading (le cercle tout \u00e0 droite). Dans les Properties (en bas \u00e0 droite de l'\u00e9cran) allez sur World. Cliquer sur le globe o\u00f9 est \u00e9crit world et s\u00e9lectionner \"Dynamic_1\". Vous pouvez ajouter un landscape pour avoir des montagne en arri\u00e8re plan. Mettre 6 Cam\u00e9ra pour capturer un cube de la sc\u00e8ne afin de pouvoir capturer tout la sc\u00e8ne. Changer la r\u00e9solution et la focal pour bien former un cube. Nommer vos fichiers Pour que le moteur fasse le lien entre vos 6 texutre il faut respecter les noms des fichiers. Les 6 textures doive avoir les noms suivante. materials\\skybox\\skybox_exemple up .vmf materials\\skybox\\skybox_exemple ft .vmf materials\\skybox\\skybox_exemple lf .vmf materials\\skybox\\skybox_exemple rt .vmf materials\\skybox\\skybox_exemple dn .vmf materials\\skybox\\skybox_exemple bk .vmf Appliquer la skybox sur Hammer Pour changer la skybox. Allez dans le menu Map->Map Properties . SkyBox 3D Cr\u00e9e un d\u00e9cor \u00e0 part du reste du niveau. Placer une sky_camera . Exemple de Skybox 3D. steamapps\\common\\sourcesdk_content\\hl2\\mapsrc\\sdk_d1_trainstation_02.vmf . Dans le dossier \" sourcesdk_content \" nous avons une liste de cartes. Dans la carte mapsrc\\sdk_d1_trainstation_02.vmf nous voyons la Tour de Cit\u00e9 17 du jeu Half-Life 2 qui est mise \u00e0 part du reste du d\u00e9cors.","title":"Skybox"},{"location":"skybox/#skybox","text":"Une Skybox permet de cr\u00e9er un ciel dans les jeux vid\u00e9o, il en existe deux les Skybox 2D et les Skybox 3D.","title":"Skybox"},{"location":"skybox/#skybox-2d","text":"","title":"SkyBox 2D"},{"location":"skybox/#cree-une-skybox-avec-blender","text":"Pour faire une Skybox 2D, nous allons utiliser Blender. Dans Blender ajouter les add-ons suivant, ils sont de base sur Blender. (pour aller sur les add-on allez sur Edit->Preferences puis add-on) Appuyer sur \"N\" pour faire d\u00e9filer le menu create et pouvoir cr\u00e9e ajouter un Landscape et un ciel. Ajouter ensuite le ciel cr\u00e9e dans la sc\u00e8ne et assurer vous bien d'\u00eatre en Renderer dans les viewport shading (le cercle tout \u00e0 droite). Dans les Properties (en bas \u00e0 droite de l'\u00e9cran) allez sur World. Cliquer sur le globe o\u00f9 est \u00e9crit world et s\u00e9lectionner \"Dynamic_1\". Vous pouvez ajouter un landscape pour avoir des montagne en arri\u00e8re plan. Mettre 6 Cam\u00e9ra pour capturer un cube de la sc\u00e8ne afin de pouvoir capturer tout la sc\u00e8ne. Changer la r\u00e9solution et la focal pour bien former un cube.","title":"Cr\u00e9e une skybox avec blender"},{"location":"skybox/#nommer-vos-fichiers","text":"Pour que le moteur fasse le lien entre vos 6 texutre il faut respecter les noms des fichiers. Les 6 textures doive avoir les noms suivante. materials\\skybox\\skybox_exemple up .vmf materials\\skybox\\skybox_exemple ft .vmf materials\\skybox\\skybox_exemple lf .vmf materials\\skybox\\skybox_exemple rt .vmf materials\\skybox\\skybox_exemple dn .vmf materials\\skybox\\skybox_exemple bk .vmf","title":"Nommer vos fichiers"},{"location":"skybox/#appliquer-la-skybox-sur-hammer","text":"Pour changer la skybox. Allez dans le menu Map->Map Properties .","title":"Appliquer la skybox sur Hammer"},{"location":"skybox/#skybox-3d","text":"Cr\u00e9e un d\u00e9cor \u00e0 part du reste du niveau. Placer une sky_camera . Exemple de Skybox 3D. steamapps\\common\\sourcesdk_content\\hl2\\mapsrc\\sdk_d1_trainstation_02.vmf . Dans le dossier \" sourcesdk_content \" nous avons une liste de cartes. Dans la carte mapsrc\\sdk_d1_trainstation_02.vmf nous voyons la Tour de Cit\u00e9 17 du jeu Half-Life 2 qui est mise \u00e0 part du reste du d\u00e9cors.","title":"SkyBox 3D"},{"location":"sons/","text":"Sons et musiques Le format doit \u00eatre en en .wav ou .mp3 en 16 bits quantification avec 44.1 KHz en fr\u00e9quence d'\u00e9chantillonage. Lire un fichier son dans hammer Ajouter votre fichier audio dans la liste des fichiers audio. Cr\u00e9e un fichier scripts/mymod_sounds.txt . \"nameofmysound\" { \"channel\" \"CHAN_AUTO\" \"volume\" \"VOL_NORM\" \"pitch\" \"95, 105\" \"soundlevel\" \"SNDLVL_GUNFIRE\" \"wave\" \"sounds/fileofmysound.wav\" } https://developer.valvesoftware.com/wiki/Soundscripts Puis ajouter votre fichiers dans scripts/game_sounds_manifest.txt . Sur Hammer vous devez mettre un ambient_generic . Vous avez l'option play_everywhere dans les Flags. Changer le son de l'interface Dans le fichier hl2_client.cpp , on a tout les fichiers charg\u00e9 par d\u00e9fault dans la m\u00e9moire. //----------------------------------------------------------------------------- // Purpose: Precache game-specific models & sounds //----------------------------------------------------------------------------- void ClientGamePrecache( void ) { CBaseEntity::PrecacheModel(\"models/player.mdl\"); CBaseEntity::PrecacheModel( \"models/gibs/agibs.mdl\" ); CBaseEntity::PrecacheModel (\"models/weapons/v_hands.mdl\"); CBaseEntity::PrecacheScriptSound( \"HUDQuickInfo.LowAmmo\" ); CBaseEntity::PrecacheScriptSound( \"HUDQuickInfo.LowHealth\" ); CBaseEntity::PrecacheScriptSound( \"FX_AntlionImpact.ShellImpact\" ); CBaseEntity::PrecacheScriptSound( \"Missile.ShotDown\" ); CBaseEntity::PrecacheScriptSound( \"Bullets.DefaultNearmiss\" ); CBaseEntity::PrecacheScriptSound( \"Bullets.GunshipNearmiss\" ); CBaseEntity::PrecacheScriptSound( \"Bullets.StriderNearmiss\" ); CBaseEntity::PrecacheScriptSound( \"Geiger.BeepHigh\" ); CBaseEntity::PrecacheScriptSound( \"Geiger.BeepLow\" ); } Dans scripts/game_sounds_ui.txt , nous avons les deux scripts avec le son qui est jou\u00e9. \"HUDQuickInfo.LowHealth\" { \"channel\" \"CHAN_ITEM\" \"volume\" \"0.8\" \"pitch\" \"PITCH_NORM\" \"soundlevel\" \"SNDLVL_NONE\" \"wave\" \"common/warning.wav\" } \"HUDQuickInfo.LowAmmo\" { \"channel\" \"CHAN_ITEM\" \"volume\" \"0.8\" \"pitch\" \"PITCH_NORM\" \"soundlevel\" \"SNDLVL_NONE\" \"wave\" \"common/warning.wav\" } Voici l'algorithme qui joue le son, dans le fichier hud_quickinfo.cpp la fonction void CHUDQuickInfo::Paint() if ( health != m_lastHealth ) { UpdateEventTime(); m_lastHealth = health; if ( health <= HEALTH_WARNING_THRESHOLD ) { if ( m_warnHealth == false ) { m_healthFade = 255; m_warnHealth = true; CLocalPlayerFilter filter; C_BaseEntity::EmitSound( filter, SOUND_FROM_LOCAL_PLAYER, \"HUDQuickInfo.LowHealth\" ); } } else { m_warnHealth = false; } }","title":"Sons et musiques"},{"location":"sons/#sons-et-musiques","text":"Le format doit \u00eatre en en .wav ou .mp3 en 16 bits quantification avec 44.1 KHz en fr\u00e9quence d'\u00e9chantillonage.","title":"Sons et musiques"},{"location":"sons/#lire-un-fichier-son-dans-hammer","text":"Ajouter votre fichier audio dans la liste des fichiers audio. Cr\u00e9e un fichier scripts/mymod_sounds.txt . \"nameofmysound\" { \"channel\" \"CHAN_AUTO\" \"volume\" \"VOL_NORM\" \"pitch\" \"95, 105\" \"soundlevel\" \"SNDLVL_GUNFIRE\" \"wave\" \"sounds/fileofmysound.wav\" } https://developer.valvesoftware.com/wiki/Soundscripts Puis ajouter votre fichiers dans scripts/game_sounds_manifest.txt . Sur Hammer vous devez mettre un ambient_generic . Vous avez l'option play_everywhere dans les Flags.","title":"Lire un fichier son dans hammer"},{"location":"sons/#changer-le-son-de-linterface","text":"Dans le fichier hl2_client.cpp , on a tout les fichiers charg\u00e9 par d\u00e9fault dans la m\u00e9moire. //----------------------------------------------------------------------------- // Purpose: Precache game-specific models & sounds //----------------------------------------------------------------------------- void ClientGamePrecache( void ) { CBaseEntity::PrecacheModel(\"models/player.mdl\"); CBaseEntity::PrecacheModel( \"models/gibs/agibs.mdl\" ); CBaseEntity::PrecacheModel (\"models/weapons/v_hands.mdl\"); CBaseEntity::PrecacheScriptSound( \"HUDQuickInfo.LowAmmo\" ); CBaseEntity::PrecacheScriptSound( \"HUDQuickInfo.LowHealth\" ); CBaseEntity::PrecacheScriptSound( \"FX_AntlionImpact.ShellImpact\" ); CBaseEntity::PrecacheScriptSound( \"Missile.ShotDown\" ); CBaseEntity::PrecacheScriptSound( \"Bullets.DefaultNearmiss\" ); CBaseEntity::PrecacheScriptSound( \"Bullets.GunshipNearmiss\" ); CBaseEntity::PrecacheScriptSound( \"Bullets.StriderNearmiss\" ); CBaseEntity::PrecacheScriptSound( \"Geiger.BeepHigh\" ); CBaseEntity::PrecacheScriptSound( \"Geiger.BeepLow\" ); } Dans scripts/game_sounds_ui.txt , nous avons les deux scripts avec le son qui est jou\u00e9. \"HUDQuickInfo.LowHealth\" { \"channel\" \"CHAN_ITEM\" \"volume\" \"0.8\" \"pitch\" \"PITCH_NORM\" \"soundlevel\" \"SNDLVL_NONE\" \"wave\" \"common/warning.wav\" } \"HUDQuickInfo.LowAmmo\" { \"channel\" \"CHAN_ITEM\" \"volume\" \"0.8\" \"pitch\" \"PITCH_NORM\" \"soundlevel\" \"SNDLVL_NONE\" \"wave\" \"common/warning.wav\" } Voici l'algorithme qui joue le son, dans le fichier hud_quickinfo.cpp la fonction void CHUDQuickInfo::Paint() if ( health != m_lastHealth ) { UpdateEventTime(); m_lastHealth = health; if ( health <= HEALTH_WARNING_THRESHOLD ) { if ( m_warnHealth == false ) { m_healthFade = 255; m_warnHealth = true; CLocalPlayerFilter filter; C_BaseEntity::EmitSound( filter, SOUND_FROM_LOCAL_PLAYER, \"HUDQuickInfo.LowHealth\" ); } } else { m_warnHealth = false; } }","title":"Changer le son de l'interface"},{"location":"sprinkle/","text":"Sprinkle Sprinkle est un outil qui permet de placer des mod\u00e8les 3d de mani\u00e8re al\u00e9atoire sur une surface, cela est tr\u00e8s pratique pour faire une for\u00eat ou une pile de cadavre sur Hammer++ . Sur Blender Blender Beginner Tutorial Part 9: Geometry Nodes Il faut cr\u00e9er les objets que l'on veut appliquer et les mettre dans une collection \u00e0 part que l'on va appeler \" Sprinkle \". Cr\u00e9e un join g\u00e9ometty. Cr\u00e9e un \"Distribute Points of Face \" Relier le au Group Input et Join Geometry. Cr\u00e9e un Instance of Points que l'on met entre \"Distrivute Points of Face\" et Instance of Points. Cr\u00e9e un \"Collection Info\" avec la collection \"Sprinkle\" selectionn\u00e9 reli\u00e9 l'instance avec celle de \"Instance of Points\". Sur Hammer++ Il suffit de cliquer sur l'outil Sprinkle. Appuyer sur Open Source. Nous allons copier le fichier texte \"Example\" et copi\u00e9. Dans notre exemple, nous allons renommer les mod\u00e8les en format mdl . Les passages soulign\u00e9s sont \u00e0 modifier. \"DeadBody\" //This is what shows up in Type { base //The base values of what you want to sprinkle. Every entity will have these values, but you do not need to put anything here { \"classname\" \"prop_static\" grid \"64 64\" // The default grid size of this type, this can be overridden in Hammer } 10 //This is the chance of this set of values being used, this can be any number { \"model\" \"models/gibs/agibs.mdl\" //The values of this case \"ignorenormals\" \"1\" //This is good for foilage props } 10 { \"model\" \"models/gibs/fast_zombie_legs.mdl\" \"skin\" \"0\" \"ignorenormals\" \"1\" } 10 { \"model\" \"models/gibs/fast_zombie_torso.mdl\" \"skin\" \"1\" \"ignorenormals\" \"1\" } 10 //Since there's 4 cases with the same chance, each case has a 1/4 chance of being placed { \"model\" \"models/gibs/agibs.mdl\" \"ignorenormals\" \"1\" } } Apr\u00e8s, nous allons s\u00e9lectionner DeadBody et mode additive dans notre exemple, nous allons avoir pleins de cadavres.","title":"Sprinkle"},{"location":"sprinkle/#sprinkle","text":"Sprinkle est un outil qui permet de placer des mod\u00e8les 3d de mani\u00e8re al\u00e9atoire sur une surface, cela est tr\u00e8s pratique pour faire une for\u00eat ou une pile de cadavre sur Hammer++ .","title":"Sprinkle"},{"location":"sprinkle/#sur-blender","text":"Blender Beginner Tutorial Part 9: Geometry Nodes Il faut cr\u00e9er les objets que l'on veut appliquer et les mettre dans une collection \u00e0 part que l'on va appeler \" Sprinkle \". Cr\u00e9e un join g\u00e9ometty. Cr\u00e9e un \"Distribute Points of Face \" Relier le au Group Input et Join Geometry. Cr\u00e9e un Instance of Points que l'on met entre \"Distrivute Points of Face\" et Instance of Points. Cr\u00e9e un \"Collection Info\" avec la collection \"Sprinkle\" selectionn\u00e9 reli\u00e9 l'instance avec celle de \"Instance of Points\".","title":"Sur Blender"},{"location":"sprinkle/#sur-hammer","text":"Il suffit de cliquer sur l'outil Sprinkle. Appuyer sur Open Source. Nous allons copier le fichier texte \"Example\" et copi\u00e9. Dans notre exemple, nous allons renommer les mod\u00e8les en format mdl . Les passages soulign\u00e9s sont \u00e0 modifier. \"DeadBody\" //This is what shows up in Type { base //The base values of what you want to sprinkle. Every entity will have these values, but you do not need to put anything here { \"classname\" \"prop_static\" grid \"64 64\" // The default grid size of this type, this can be overridden in Hammer } 10 //This is the chance of this set of values being used, this can be any number { \"model\" \"models/gibs/agibs.mdl\" //The values of this case \"ignorenormals\" \"1\" //This is good for foilage props } 10 { \"model\" \"models/gibs/fast_zombie_legs.mdl\" \"skin\" \"0\" \"ignorenormals\" \"1\" } 10 { \"model\" \"models/gibs/fast_zombie_torso.mdl\" \"skin\" \"1\" \"ignorenormals\" \"1\" } 10 //Since there's 4 cases with the same chance, each case has a 1/4 chance of being placed { \"model\" \"models/gibs/agibs.mdl\" \"ignorenormals\" \"1\" } } Apr\u00e8s, nous allons s\u00e9lectionner DeadBody et mode additive dans notre exemple, nous allons avoir pleins de cadavres.","title":"Sur Hammer++"},{"location":"texture/","text":"Les Textures https://github.com/NeilJed/VTFLib Une texture est une ou plusieurs images que nous allons utiliser en jeu, que ce soit pour l'interface, les murs des b\u00e2timents ou les mod\u00e8les 3D. Pour utiliser les images, nous avons besoins de les convertis dans un format le .VTF et ensuite les r\u00e9pertorier avec un .VMF . Cr\u00e9e une Texture Nous avons plusieurs moyens de faire une texture, cela peut se faire avec un dessin ou en prenant une photo. Les dimensions des textures sont le plus souvent des multiples de 2 256x256px, 512x512px . Malheureusement cela ne suffit pas \u00e0 cr\u00e9er une texture ! En effet, certaines textures sont compos\u00e9es de plusieurs Images comme pour la r\u00e9flexion de la lumi\u00e8re, la profondeur etc... Quand la texture poss\u00e8de cela, on appelle sa un materials . Pour plus de d\u00e9tails cliquer ici Web TV - #10 La 3D : Am\u00e9liorer les Textures Cr\u00e9e une normal map Une normal cr\u00e9e des effets de reliefs sur la texture Pour en cr\u00e9er une, il faut importer sa texture sur un logiciel de retouche d'image comme Gimp ou Photoshop voici comment faire. Photoshop Filter \u2192 3D \u2192 Generate Normal Map il suffit d'exporter sa normal File \u2192 Export Gimp Filter->generic->Normal map VTFEdit Quand vous importer une texture, cocher \u00abGenerate Normal Map\u00bb. Bump Map Une Bump Map permet de simuler les bosses et les creux Comme pour la normal map le bump mapping va convertir l'image en une autre image, une image en nuance de gris, en blanc ce sont les bosses et en noir ce sont les creux. Materials Le materials regroupe toutes les textures qui compose notre image en un seul fichier Convertir une texture en VTF https://github.com/NeilJed/VTFLib Hammer ne lit que les fichiers VTF , pour Valve Texture Format . Heureusement, nous avons le logiciel VTFLib pour convertir en VTF. Utiliser le logiciel VTFLib . (Ce n'est pas compliqu\u00e9, il est en lien juste en haut) Vous avez juste faire Import votre Image et magique, elle est convertit en VTF ! Sauvegarder l\u00e0 et placer l\u00e0, dans le dossier materials de votre mod. Le fichier VMT pour Valve Material indique, tout les image dans la texture. Il cr\u00e9e un material . Nous allons importer le fichier image puis exporter en VMT. Tools->Create_VMT On va mettre tous les \u00e9l\u00e9ments qui constitue notre texture (normal, bump, ect..). Il reste plus que l'on mette sa dans le dossier \u00ab materials \u00bb et c'est bon. (Attention VMT est juste un fichier texte normal, n'oublier pas de mettre les fichiers VTF avec.) Changer le shader de la texture Votre Texture \u00e0 un Shader, par default c'est LightmappedGeneric qui fait adapter pour les textures de mur. Pour les mod\u00e8les 3D le .vmt doit \u00eatre en \" VertexlitGeneric \" comme shader. Maintenant, vous pouvez cr\u00e9er et placer vos .vmt dans le m\u00eame dossier que votre texture (materials). Vous devriez avoir quelque chose qui devrait ressemble \u00e0 sa. ( \u00abmodname\u00bb\\materials\\ads\\watibulle.vmt \u00abmodname\u00bb\\materials\\ads\\watibulle.vtf ) \"LightmappedGeneric\" { \"$basetexture\" \"ads/watibulle\" } Texture Blend https://developer.valvesoftware.com/wiki/$blendmodulatetexture La texture blend est un m\u00e9lange de deux textures, elles sont tr\u00e8s pratiques pour ajouter des asp\u00e9rit\u00e9s. Pour cr\u00e9er, nous avons besoin des deux textures est une texture modulate rouge et vert qui va indiquer comment doive se m\u00e9langer les deux textures. \"WorldVertexTransition\" { \"$basetexture\" \"urban/blend_stone_tiles_diffuse\" \"$bumpmap\" \"urban/blend_stone_tiles_normal\" \"$basetexture2\" \"urban/blend_stone_tiles_mud_forest_diffuse\" \"$bumpmap2\" \"urban/blend_stone_tiles_mud_forest_normal\" \"$surfaceprop\" \"Brick\" \"$surfaceprop2\" \"Dirt\" \"$basetexturetransform\" \"center .5 .5 scale 2 2 rotate 0 translate 0 0\" \"$basetexturetransform2\" \"center .5 .5 scale 4 4 rotate 0 translate 0 0\" \"$alphatest\" 1 } Pour utiliser la texture blend cf. 5.6 Utiliser les textures Blends Texture Devs Les Textures dev sont des textures cr\u00e9er par Valve pour aider aux mesures. dev_measurewall Celle-ci permettent de connaitre mesures avec la taille d'un mur soit 128 sur 128 soit 2.5m. \" dev_measurewall01c \" mets en avant la taille du joueur.","title":"Les Textures"},{"location":"texture/#les-textures","text":"https://github.com/NeilJed/VTFLib Une texture est une ou plusieurs images que nous allons utiliser en jeu, que ce soit pour l'interface, les murs des b\u00e2timents ou les mod\u00e8les 3D. Pour utiliser les images, nous avons besoins de les convertis dans un format le .VTF et ensuite les r\u00e9pertorier avec un .VMF .","title":"Les Textures"},{"location":"texture/#cree-une-texture","text":"Nous avons plusieurs moyens de faire une texture, cela peut se faire avec un dessin ou en prenant une photo. Les dimensions des textures sont le plus souvent des multiples de 2 256x256px, 512x512px . Malheureusement cela ne suffit pas \u00e0 cr\u00e9er une texture ! En effet, certaines textures sont compos\u00e9es de plusieurs Images comme pour la r\u00e9flexion de la lumi\u00e8re, la profondeur etc... Quand la texture poss\u00e8de cela, on appelle sa un materials . Pour plus de d\u00e9tails cliquer ici Web TV - #10 La 3D : Am\u00e9liorer les Textures","title":"Cr\u00e9e une Texture"},{"location":"texture/#cree-une-normal-map","text":"Une normal cr\u00e9e des effets de reliefs sur la texture Pour en cr\u00e9er une, il faut importer sa texture sur un logiciel de retouche d'image comme Gimp ou Photoshop voici comment faire.","title":"Cr\u00e9e une normal map"},{"location":"texture/#photoshop","text":"Filter \u2192 3D \u2192 Generate Normal Map il suffit d'exporter sa normal File \u2192 Export","title":"Photoshop"},{"location":"texture/#gimp","text":"Filter->generic->Normal map","title":"Gimp"},{"location":"texture/#vtfedit","text":"Quand vous importer une texture, cocher \u00abGenerate Normal Map\u00bb.","title":"VTFEdit"},{"location":"texture/#bump-map","text":"Une Bump Map permet de simuler les bosses et les creux Comme pour la normal map le bump mapping va convertir l'image en une autre image, une image en nuance de gris, en blanc ce sont les bosses et en noir ce sont les creux.","title":"Bump Map"},{"location":"texture/#materials","text":"Le materials regroupe toutes les textures qui compose notre image en un seul fichier","title":"Materials"},{"location":"texture/#convertir-une-texture-en-vtf","text":"https://github.com/NeilJed/VTFLib Hammer ne lit que les fichiers VTF , pour Valve Texture Format . Heureusement, nous avons le logiciel VTFLib pour convertir en VTF. Utiliser le logiciel VTFLib . (Ce n'est pas compliqu\u00e9, il est en lien juste en haut) Vous avez juste faire Import votre Image et magique, elle est convertit en VTF ! Sauvegarder l\u00e0 et placer l\u00e0, dans le dossier materials de votre mod. Le fichier VMT pour Valve Material indique, tout les image dans la texture. Il cr\u00e9e un material . Nous allons importer le fichier image puis exporter en VMT. Tools->Create_VMT On va mettre tous les \u00e9l\u00e9ments qui constitue notre texture (normal, bump, ect..). Il reste plus que l'on mette sa dans le dossier \u00ab materials \u00bb et c'est bon. (Attention VMT est juste un fichier texte normal, n'oublier pas de mettre les fichiers VTF avec.)","title":"Convertir une texture en VTF"},{"location":"texture/#changer-le-shader-de-la-texture","text":"Votre Texture \u00e0 un Shader, par default c'est LightmappedGeneric qui fait adapter pour les textures de mur. Pour les mod\u00e8les 3D le .vmt doit \u00eatre en \" VertexlitGeneric \" comme shader. Maintenant, vous pouvez cr\u00e9er et placer vos .vmt dans le m\u00eame dossier que votre texture (materials). Vous devriez avoir quelque chose qui devrait ressemble \u00e0 sa. ( \u00abmodname\u00bb\\materials\\ads\\watibulle.vmt \u00abmodname\u00bb\\materials\\ads\\watibulle.vtf ) \"LightmappedGeneric\" { \"$basetexture\" \"ads/watibulle\" }","title":"Changer le shader de la texture"},{"location":"texture/#texture-blend","text":"https://developer.valvesoftware.com/wiki/$blendmodulatetexture La texture blend est un m\u00e9lange de deux textures, elles sont tr\u00e8s pratiques pour ajouter des asp\u00e9rit\u00e9s. Pour cr\u00e9er, nous avons besoin des deux textures est une texture modulate rouge et vert qui va indiquer comment doive se m\u00e9langer les deux textures. \"WorldVertexTransition\" { \"$basetexture\" \"urban/blend_stone_tiles_diffuse\" \"$bumpmap\" \"urban/blend_stone_tiles_normal\" \"$basetexture2\" \"urban/blend_stone_tiles_mud_forest_diffuse\" \"$bumpmap2\" \"urban/blend_stone_tiles_mud_forest_normal\" \"$surfaceprop\" \"Brick\" \"$surfaceprop2\" \"Dirt\" \"$basetexturetransform\" \"center .5 .5 scale 2 2 rotate 0 translate 0 0\" \"$basetexturetransform2\" \"center .5 .5 scale 4 4 rotate 0 translate 0 0\" \"$alphatest\" 1 } Pour utiliser la texture blend cf. 5.6 Utiliser les textures Blends","title":"Texture Blend"},{"location":"texture/#texture-devs","text":"Les Textures dev sont des textures cr\u00e9er par Valve pour aider aux mesures. dev_measurewall Celle-ci permettent de connaitre mesures avec la taille d'un mur soit 128 sur 128 soit 2.5m. \" dev_measurewall01c \" mets en avant la taille du joueur.","title":"Texture Devs"},{"location":"trigger_hammer/","text":"Trigger et algorithme dans hammer https://developer.valvesoftware.com/wiki/Category:IO_System Dans Hammer nous pouvons activer des scripts (Dialogue, apparition d'ennemi, etc...), cela peut se faire en marchant \u00e0 un endroit pr\u00e9cis o\u00f9 au chargement de la map. Activer un script Avec l'entit\u00e9 logic_auto nous pouvons activer un script au d\u00e9marage de la map. Il faut mettre OnMapSpawn dans les param\u00e8tres. Mettre le nom de l'entit\u00e9 en argument. Qu'elle type d'entr\u00e9e va recevoir l'entit\u00e9. Une autre valeur en argument d'entr\u00e9e. Pour placer un trigger cr\u00e9e un block puis le transformer en entit\u00e9 (CTRL + T). Trigger_once qui s'active une fois ou Trigger_multiple qui peut s'activer plusieurs fois. Assurez vous que le Flags Clients est activer. Machine \u00e0 \u00e9tat Une machine \u00e0 \u00e9tat est un principe s\u00e9quentielle, o\u00f9 l'on va donner un \u00e9tat qui va changer en fonction de la valeur qui recois en entr\u00e9. Metter l'entit\u00e9 logic_case . Exemple avec un syst\u00e8me de lumi\u00e8re qui alume une lumi\u00e8re rouge puis vert et bleue.","title":"Trigger et algorithme dans hammer"},{"location":"trigger_hammer/#trigger-et-algorithme-dans-hammer","text":"https://developer.valvesoftware.com/wiki/Category:IO_System Dans Hammer nous pouvons activer des scripts (Dialogue, apparition d'ennemi, etc...), cela peut se faire en marchant \u00e0 un endroit pr\u00e9cis o\u00f9 au chargement de la map.","title":"Trigger et algorithme dans hammer"},{"location":"trigger_hammer/#activer-un-script","text":"Avec l'entit\u00e9 logic_auto nous pouvons activer un script au d\u00e9marage de la map. Il faut mettre OnMapSpawn dans les param\u00e8tres. Mettre le nom de l'entit\u00e9 en argument. Qu'elle type d'entr\u00e9e va recevoir l'entit\u00e9. Une autre valeur en argument d'entr\u00e9e. Pour placer un trigger cr\u00e9e un block puis le transformer en entit\u00e9 (CTRL + T). Trigger_once qui s'active une fois ou Trigger_multiple qui peut s'activer plusieurs fois. Assurez vous que le Flags Clients est activer.","title":"Activer un script"},{"location":"trigger_hammer/#machine-a-etat","text":"Une machine \u00e0 \u00e9tat est un principe s\u00e9quentielle, o\u00f9 l'on va donner un \u00e9tat qui va changer en fonction de la valeur qui recois en entr\u00e9. Metter l'entit\u00e9 logic_case . Exemple avec un syst\u00e8me de lumi\u00e8re qui alume une lumi\u00e8re rouge puis vert et bleue.","title":"Machine \u00e0 \u00e9tat"},{"location":"video/","text":"Videos https://developer.valvesoftware.com/wiki/Startup_Video_add/edit/remove https://developer.valvesoftware.com/wiki/BIK http://www.radgametools.com/bnkdown.htm Exporter en format .bik Prener votre fichier vid\u00e9o et exporter le .bik avec le logiciel RAD video tool. Video au d\u00e9marage Modifier le fichier media/startupvids.txt { media/YourFileName.bik media/valve.bik(default) }","title":"Videos"},{"location":"video/#videos","text":"https://developer.valvesoftware.com/wiki/Startup_Video_add/edit/remove https://developer.valvesoftware.com/wiki/BIK http://www.radgametools.com/bnkdown.htm","title":"Videos"},{"location":"video/#exporter-en-format-bik","text":"Prener votre fichier vid\u00e9o et exporter le .bik avec le logiciel RAD video tool.","title":"Exporter en format .bik"},{"location":"video/#video-au-demarage","text":"Modifier le fichier media/startupvids.txt { media/YourFileName.bik media/valve.bik(default) }","title":"Video au d\u00e9marage"}]}